---
title: "Quantity discrimination, decision-making, and the role of early-life conditions in a lizard"
docx: 
  reference-doc: "./bib/tmpl.docx"
bibliography: "./bib/refs.bib"
csl: "./bib/animal-cognition.csl"
execute:
  echo: false
  error: false
  cache: false
  warning: false
link-citations: true
crossref:  
  fig-title: Fig    # (default is "Figure")
  title-delim: —     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Table  # (default is "Table")
editor_options: 
  chunk_output_type: console
---

```{r, packages}
#| label: packages
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, forcats, MASS, nortest, fitdistrplus, ggh4x, PupillometryR, cowplot, png, grid, remotes, ggthemes, bayestestR, HDInterval)
```

```{r, data_length_trials}
#| label: data_length_trials
#
source(here("R", "func.R"))
#
data_length <- read.csv(here("./data/measures_crickets.csv")) %>%
  group_by(test) %>%
  summarize(
    mean_length_small = format_dec(mean(measure_small, na.rm = TRUE), 2),
    mean_length_large = format_dec(mean(measure_big, na.rm = TRUE), 2),
    mean_difference = format_dec(mean(diff_measure, na.rm = TRUE), 2),
    low_diff = format_dec(quantile(diff_measure, 0.025, na.rm = TRUE), 2),
    high_diff = format_dec(quantile(diff_measure, 0.975, na.rm = TRUE), 2)
  ) %>%
  ungroup() %>%
  mutate(
    `95% CI` = paste0("[", low_diff, " , ", high_diff, "]")
  ) %>%
  dplyr::select(test, mean_length_small, mean_length_large, mean_difference, `95% CI`)
```

Pablo Recio^1, 2^,$\ddagger$ , Dalton C. Leibold^1^, Ondi L. Crino ^1,2^, Christopher R. Friesen ^3,4^, Amelia Y. Peardon ^1^, Daniel W.A. Noble^1^

^1^ Division of Ecology and Evolution, Research School of Biology, The Australian National University, Canberra, ACT 2601, Australia    

^2^ College of Science and Engineering, Flinders University, Bedford Park, SA 5042, Australia   

^3^ University of Wollongong, Wollongong, NSW 2500, Australia    

^4^ Environmental Futures University of Wollongong, Wollongong, NSW, Australia  

$\ddagger$ Corresponding author: pablo.reciosantiago@anu.edu.au  

ORCID:

Pablo Recio ORCID: 0000-0002-5890-0218  
Dalton C. Leibold ORCID: 0000-0001-9645-2033  
Ondi L. Crino ORCID: 0000-0001-5700-1387  
Christopher R. Friesen ORCID: 0000-0001-5338-7454  
Amelia Y. Peardon ORCID: 0009-0005-6227-8379  
Daniel W.A. Noble ORCID: 0000-0001-9460-8743

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

## Keywords
Cognitive abilities, Corticosterone, Early life stress, Numerical discrimination, Reptiles, Temperature  

## Abstract
Quantity discrimination affects a range of behaviours essential for fitness, including social interactions, navigation, and foraging and is widespread across animal taxa. However, in reptiles, evidence for this ability—particularly for small number contrasts—remains limited and mixed. Early-life conditions, such as hormonal exposure and temperature, can also shape brain development and cognitive performance, potentially affecting numerical abilities. Here, we tested the ability of the common garden skink (_Lampropholis guichenoti_) to discriminate between quantities and the effects of elevated prenatal GCs and incubation temperature on quantity discrimination and decision-making. We assessed quantity discrimination using a spontaneous choice test with food as a stimulus. We subjected lizards to five two-choice tests differing in the number of items (1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4) while controlling for total length and area. Contrary to our predictions, we found no evidence of quantity discrimination in _L. guichenoti_. Furthermore, prenatal conditions did not influence their performance or decision-making. Despite these results, further investigation of quantity discrimination in live-prey-feeding reptiles and the impact of early conditions on other taxa remains an important area of research.     


## Significance statement
Discriminating between quantities can be crucial for individual fitness, yet it remains poorly understood in reptiles. This study investigated quantity discrimination in _Lampropholis guichenoti_ using a spontaneous choice test with food as the stimulus. Contrary to our predictions, we found no evidence of quantity discrimination in this species. In addition, we explored the impact of early environmental factors, specifically prenatal corticosterone exposure and incubation temperature, on quantity discrimination and decision-making. However, we did not observe any effect of these early-life conditions on lizards’ behaviour. These results open new avenues for exploring the evolution of quantity discrimination in reptiles and identifying factors influencing cognitive development in this group. Further research should explore alternative methods, such as trained tasks, to better understand the mechanisms underlying quantity discrimination and decision-making in reptiles.  

## Introduction  
The ability to discriminate between quantities is a fundamental cognitive skill widely observed across the animal kingdom [@stancher2015numerical; @vonk2012bears; @beran2016capuchin]. Quantity discrimination can contribute to social decisions, mate selection, and foraging behaviour, which can be adaptive in numerous ecological contexts [@lucon2017individual; @nieder2018evolution]. For instance, female lions (_Panthera leo_) use numerical information to assess the risk of confronting rival groups [@mccomb1994roaring], male adult mealworms (_Tenebrio molitor_) select sites with scents of more females [@carazo2009quantity], and red-backed salamanders (_Plethodon cinereus_) prefer tubes containing larger numbers of prey [@uller2003salamanders]. Given the adaptive advantages of quantity discrimination, research has focused extensively on exploring the ability of different species to differentiate between quantities.  

The main two experimental approaches in the study of quantity discrimination are spontaneous choice tests and training procedures. Spontaneous choice tests ascertain if animals can distinguish between two groups of biologically relevant stimuli that differ quantitatively (number, size, volume) [@agrillo2014spontaneous; @cox2016quantity]. Experiments employing training procedures evaluate an animal’s ability to learn a numerical rule to receive a reward [@agrillo2014spontaneous; @miletto2018quantity]. Both methods are believed to be complementary to each other and can provide different results even in the same species [see @miletto2017quantitative; @miletto2018quantity]. 

Numerous reasons exist for why methods can lead to different results. First, spontaneous choice tests assume that one of the options presented is more suitable than the other (e.g. the group with more conspecifics or the larger amount of food) when this may not always be the case. For example, choosing groups of conspecifics with fewer individuals could be advantageous when food is scarce but disadvantageous when predators are abundant [@yee2013costs]. As such, context and motivation can be essential drivers of decision-making that can change the way animals discriminate between quantities [@gazes2018impact]. Second, each method may engage distinct cognitive mechanisms when processing numerical information [@agrillo2014spontaneous]. Different procedures may shape how animals discriminate between quantities, making them more responsive towards certain quantity traits over others. Some tasks may encourage a focus on approximate magnitudes, while others may promote attention to individual items [@soldati2017long].

In this regard, researchers propose that two core systems underlie numerical cognition: the approximate number system (ANS) and the object file system (OFS) [@hyde2011two]. The ANS estimates the approximate magnitude of items within a set, with accuracy decreasing as the numerical difference between sets decreases — a principle known as Weber’s law [@hyde2011two]. In contrast, the OFS allows for the precise tracking of discrete items but is thought to be limited to small quantities, typically up to three or four [@hyde2011two]. However, when discriminating between small quantities, the engagement of these systems also depends on contextual factors such as the availability of continuous variables (e.g., area, density, movement) and the nature of the task [@stancher2015numerical]. Such continuous cues typically favor ANS-based processing, while in their absence, the OFS is more likely to be employed [@agrillo2014spontaneous], which often complicates the study of numerosity, as continuous traits must be carefully controlled to ensure the use of the OFS [@agrillo2014spontaneous]. In spontaneous choice tests, for instance, animals may rely on cumulative surface area (ANS-related) rather than numerical (OFS-associated) differences when selecting between two sets of food items [@agrillo2014spontaneous]. To disentangle these cues, researchers often keep the total area of the sets constant while changing the number of items, forcing individuals to rely on numerical information alone [@vonk2012bears; @stancher2015numerical; @beran2016capuchin].  

Quantity discrimination studies have been traditionally focused on mammals, birds, and fishes despite the influence of numerical cognition on fitness across taxa [@mehlis2015quantification; @nieder2018evolution]. However, recent studies demonstrate that other vertebrates like amphibians or non-avian reptiles are also competent in discerning numbers [@uller2003salamanders; @stancher2015numerical; @miletto2017quantitative]. For example, freshwater turtles (_Trachemys scripta_ and _Mauremys sinensis_) and red-footed tortoises (_Chelonoidis carbonaria_) can rapidly learn a quantity discrimination task [@soldati2017long; @lin2021superior; @lin2024trained], and Hermann’s tortoises (_Testudo hermanni_) can discriminate between large and small food quantities in a spontaneous choice test [@gazzola2018continuous]. In lizards, the Italian wall lizard (_Podarcis siculus_) failed to discriminate between different numbers of food items in a spontaneous choice test [@miletto2017quantitative], but succeeded in a trained quantity discrimination task [@miletto2018quantity]. Shinglebacks (_Tiliqua rugosa_) exhibited spontaneous quantity discrimination using both discrete and continuous cues [@szabo2024spontaneous], while Gidgee skinks (_Egernia stokesii_) discriminated between items when they differed in number but not when size was the main quantitative cue [@szabo_spontaneous_2021]. These studies demonstrate that reptiles have cognitive abilities related to quantity discrimination that have been overlooked in the past, and that the use of the ANS versus the OFS can differ between species and in different contexts [@szabo_spontaneous_2021]. However, cognitive performance is not solely dictated by species differences; developmental conditions can also shape an individual's ability to process numerical information [@vila_pouca_quantity_2019].       

Developmental conditions can strongly influence cognition because the brain is particularly sensitive to environmental inputs in early life stages [@zhu_prenatal_2004]. In ectotherms, the temperature at which embryos develop have significant effects on several traits [@noble_developmental_2018]. For example, incubation at warm temperatures influences neuron density and learning abilities in different species of reptiles [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017; @dayananda_incubation_2017; @siviter_incubation_2017; @abayarathna_effects_2020]. Importantly, thermal effects on cognition may arise directly or through parental effects [@Crino_2023].Thermal fluctuations, particularly those approaching the edges of an organism's optimal range can trigger the stress response, leading to the release of glucocorticoids (GCs) [@sapolsky_how_2000], which may then be transmitted to offspring [@Crino_2023]. Elevated prenatal GCs can, in turn, influence cognition by altering brain function [@szuran_water_1994; @zhu_prenatal_2004; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016; @lui2017chronic]. For instance, stressing pregnant rats (_Rattus norvegicus_) suppresses neurogenesis in the dentate gyrus of the offspring, associated with impairments in spatial learning [@lemaire_prenatal_2000]. As such, the interaction between GCs and developmental temperature may be relevant in shaping reptile cognition, especially under the context of climate change [@Crino_2023]. Most studies on the effects of GC exposure or elevated temperatures during development focus on learning and memory, but few studies have investigated how early-life conditions can affect quantity discrimination despite its importance on animals' lives [but see @vila_pouca_quantity_2019]. Furthermore, the interactive effects of prenatal GCs and temperature on cognitive abilities remain largely unexplored.    
   
Here, we investigated quantity discrimination in the common garden skink (_Lampropholis guichenoti_) using a spontaneous choice test where lizards were presented with different numbers of food items. Our aim was to understand if this species could use the OFS to discriminate between small quantities of prey in a spontaneous choice test. In addition, we examined how prenatal corticosterone (CORT) - the main GC in reptiles - and incubation temperature can affect quantity discrimination and decision-making in foraging contexts. To do so, we manipulated CORT concentration (CORT-treated or a sham control) in _L. guichenoti_ eggs and incubated them under one of two temperature regimes (Cold - 23 ± 3ºC or Hot - 28 ± 3ºC) in a 2x2 factorial design. Then, we assessed numerical discrimination abilities on five tests that differed in the relative number of food items: 1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4 crickets. Previous studies showed that skink species can discriminate between different quantities of food using both the ANS and the OFS [@szabo_spontaneous_2021; @szabo2024spontaneous]. We predicted _L. guichenoti_ to be able to discriminate between different numbers of crickets even when controlling for other continuous variables like total length and area (i.e. by using the OFS). However, we predicted that numerical discrimination would be affected by early-life conditions. Specifically, we hypothesized that lizards incubated at higher temperatures would outperform those incubated at lower temperatures in the numerical discrimination task as previous studies have reported enhanced cognitive abilities in ectotherms incubated under warmer conditions [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017; @vila_pouca_quantity_2019]. Furthermore, we predicted that increased CORT levels would impair numerical discrimination [@szuran_water_1994; @zhu_prenatal_2004], with more pronounced effects at lower temperatures.    

## Methods  

#### Animal husbandry  
*Breeding colony* -- The lizards tested in our experiment came from a breeding colony established in the lab in 2019. The colony consisted of approximately 180 adults of _L. guichenoti_ housed in communal containers (41.5 L x 30.5 W x 21 H cm) with six lizards (2 males and 4 females) per enclosure. Enclosures were provided with non-stick matting, shelter, and several small water dishes filled daily, and lizards were fed mid-size crickets (*Acheta domestica*) three days a week. Crickets were dusted with calcium weekly and multivitamins and calcium biweekly. Room temperatures were set to 22-24ºC, but to ensure a temperature gradient, we employed a heat chord and a heat lamp following a 12 h light:12 h dark cycle, keeping the warm side of enclosures at 32-34ºC.  

*Egg collection and incubation* -- Between mid-October 2023 to the end of February 2024, we placed small boxes (12.5 L x 8.3 W x 5 H cm) containing vermiculite on one side of the communal enclosures (see above) to provide females with a place to lay the eggs. We checked for eggs in the boxes three days a week. Eggs were assigned a clutch number and an individual identity. Then, we treated eggs with CORT or a vehicle control (see _Manipulating Early Thermal and CORT Environments_ details below) and placed each egg in individual cups (80 mL) with moist vermiculite (12 g water to 4 g vermiculite) and covered the cups with plastic wrap to retain moisture. Each egg was incubated individually in incubators (LATWIT 2X5D-R1160) programmed to two different thermal regimes (see _Manipulating Early Thermal and CORT Environments_ details below) until hatching. Incubators were checked for the presence of hatchlings three times a week. Egg and hatchling mortality was not higher than 13% in any of the treatments (Leibold et al., In prep.).  

*Hatchlings* -- Hatchlings were placed in individual enclosures immediately after hatchling (18.7L x 13.2W x 6.3H cm) with non-stick matting and a small water dish and until the acclimatisation period (see below). During this time, they were given water daily and received 3-6 small _A. domestica_ crickets three times a week. All care otherwise followed similar protocols to adults (see above).  


#### Manipulating Early Thermal and CORT Environments  

We manipulated CORT concentration in eggs and incubated them under one of two temperature regimes (Cold - 23 ± 3 ºC or Hot - 28 ± 3 ºC) in a 2x2 factorial design (@fig-Methods A). Eggs were allocated to one of two developmental stress treatments: CORT-treated eggs were topically supplied with 5 µL of a CORT solution (10 pg/mL) once, immediately after collection and before incubation. Corticosterone treatments were made by dissolving crystalline corticosterone (Sigma, Cat. No. C2505) in 100% ethanol [@carter2016turtle; @carter2018evidence]. This CORT dose increased mean yolk CORT levels 2 standard deviations higher than those of control eggs in previous studies [@crino2024eggs]. Control treatment eggs received an equal volume of 100% Ethanol. Then, all eggs were incubated in one of the two previously mentioned temperature regimes (Cold or Hot) until hatching. These temperatures represent the upper and lower limits of the natural incubation temperatures for this species [@qualls2000post]. 

The number of eggs per clutch assigned to each hormone and temperature treatment was counterbalanced in a partial split-clutch design. At least one egg per clutch was allocated to each treatment, and the remaining eggs were randomly assigned to one of the treatments. When we found less than four eggs in a clutch, we assigned each egg randomly to one of the treatments.  

#### Numerical discrimination task  

Lizards were acclimatised to the experimental arenas for two weeks before starting the experiments (see below). The arenas were individual medium-size (41 L x 29.7 W x 22 H cm) plastic containers provided with a shelter (9 L x 6 W x 1.5 H cm) on one of the sides and a water dish in the center (@fig-Methods B). Arenas were placed on seven different racks located in two experimental rooms. Each rack was associated with its own CCTV system (device model DVR-HP210475), allowing us to record lizards' behaviour during the experiment. Despite the conditions in the experimental rooms being the same as in the colony room, we counterbalanced the number of lizards per treatment in each rack to control for any potential effects of the room or the position of the lizard in the rack. During acclimatisation and throughout the experiment, lizards were fed only one cricket daily, dusted with calcium and multivitamins (see protocol below), and water was supplied *ad libitum*. The temperature of both rooms was set to 22-24ºC, but we also provided a temperature gradient (24-32°C) using a heat cord along the center of the arena and heat lamps in a 12 h light: 12 h dark cycle.  

The numerical discrimination test consisted of a series of two-choice trials where lizards were presented with different numbers of food items. Each choice was placed on one of the two lateral platforms of a white 3D printed device (see @fig-Methods B, C) and then covered with a transparent Petri dish to prevent the lizard from obtaining the food. We performed five numerical discrimination tests per lizard, each differing in the ratio between both choices of crickets: 1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4 crickets. Each numerical discrimination test was made only once per lizard. We counterbalanced the order of testing by ensuring that, each day, an equal number of individuals from each treatment were tested in each type of trial. We controlled for potential side biases by placing the higher number of crickets randomly on the right or the left platform. The food consisted of small thawed frozen crickets (_A. domestica_) that were dusted with calcium and multivitamins. We decided to use thawed frozen crickets to avoid movement that would affect lizard behaviour [@cooper2024tell]. After acclimatisation to the arenas and before the numerical tests, lizards were habituated to eating thawed frozen crickets for one month before the experiments.  

The crickets used during the experiment were all the same size, but to control for some continuous traits, we changed the orientation of the crickets as illustrated in @fig-Methods D. This method was intended to control for length and total area [see @stancher2015numerical]. We tested if the length occupied by the crickets was similar in both choices (see _Supplementary Material: Control of size in both options_). this analysis showed that except for the 1 VS 4 and 1 VS 3 tests, the difference in length between both choices was not different from zero. As such, discrimination between both choices in the rest of the tests (2 VS 4, 2 VS 3, 3 VS 4 crickets) would be produced by the OFS, not the ANS [@agrillo2014spontaneous]. In addition, after the experiments, we subjected the same lizards to another set of trials to test whether the orientation of the crickets could affect lizards’ choice, but we found no effect of orientation (see _Supplementary Material: Prey orientation test_).  

To habituate lizards to the experimental conditions, frozen crickets were placed on top of one of the platforms and Petri dishes during each feeding for two weeks prior to experimental trials. The side where the food was placed was changed every day to avoid any side bias during the trials.     

```{r, fig-Methods}
#| label: fig-Methods
#| fig.cap: "Experimental design. Panel (**A**) shows the early environment manipulation procedures. (**B**) illustrates the arena where the tests were performed, while panel (**C**) indicates the measurements of the platform used for the experiments. Finally, panel (**D**) displays the types of numerical tests used and the orientation of the crickets in each test."

knitr::include_graphics("./Others/NUMDIS_FIG_1.pdf")

```

All tests were done between 1000-1200 hours when the lizards were most active. Each trial was performed daily for five days between the 17^th^ and 22^nd^ of May 2024. Every trial began when we left the platform with the crickets in the enclosure, and lasted for 90 minutes until we took the platform away. We recorded three main variables: i) _Latency_, defined as the time between the start of the test - when the platform was left in the enclosure - until the first interaction with one of the options; ii) First choice of the lizard (_Choice_), recorded as 1 if the lizard interacted first with the larger amount or 0 if not; and iii) _Interest_ shown for the higher amount of food (detailed below). Interaction was defined as touching the Petri dish with the snout or having the front half of the body on the platform. For each option, and regardless of _Latency_, we recorded the time the lizard spent interacting with it for five minutes after the first interaction. The timer was not paused if the lizard walked away, so the recorded time reflects total engagement with each option during the first five minutes following initial contact. We calculated _Interest_ by subtracting the time spent interacting with the smaller food option from the time spent interacting with the larger one. If there was no interaction with one of the options during the test, we considered the time spent as zero for that option. _Latency_, _Choice_, and _Interest_ were noted as NA when there was no interaction with any of the choices (n = 4 observations). We also considered _Interest_ as NA in a few cases where the animals managed to lift the dish and eat the prey (n = 7 observations); _Latency_ and _Choice_ were recorded and employed in the analyses. We excluded from the analyses all the individuals that did not make any choice in three or more tests (n = 0 individuals excluded). All the analyses were by one observer (PR), who was blind to the treatment of the lizards, but not the type of test or the number of crickets because the videos were analysed manually.   

Motivation plays a key role in animals' performance in spontaneous choice tests [@bisazza2014experim; @gazes2018impact]. To ensure that lizards remained motivated to forage, they were provided only one cricket per day during acclimatisation and the numerical task (see above). During acclimatisation, lizards were fed at the same time each day as the experiments were conducted. In the numerical task, lizards received a cricket immediately after the test and then fasted for more than 20 hours, which we expected would help standardise fasting levels across individuals. To further control for motivation, we excluded from our analyses any trials in which lizards did not interact with any options or did not eat the cricket provided after the test (n = 0 in both cases). Consequently, we do not consider motivation a significant factor influencing our results (but see Discussion).  

#### Statistical analyses  
In our analyses, we fitted a multivariate Bayesian multilevel model using the brm function from the _brms_ package [@burkner2017brms] in R (version 2.8.2) [@R]. We ran four parallel MCMC chains of 3000 iterations for each model, with a warmup period of 1000 iterations. We checked that all MCMC chains converged (Rhat < 1.2) and were mixing effectively to ensure we had >1000 effective samples from the posterior distribution.   

We modelled the three main recorded behaviours: _Latency_, _Choice_, and _Interest_ as the response variables. We assumed normal distributions for Latency (log-transformed) and Interest [family = gaussian()]. The error structure for Choice was modeled using a Bernoulli distribution with a logit link function [family = Bernoulli(link = ‘logit’)]. We included test (1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4), hormone (CORT versus Control), incubation temperature (Cold versus Hot), and the three-way interaction as fixed factors. We also included sex, and age (days since hatching) as predictors. Age was centered to the mean to facilitate interpretation of model estimates, and posterior predictions were averaged across sexes to provide estimates independent of the reference category.  

We included lizard identity and clutch identity as random factors. _L. guichenoti_ lays up to two clutches per year [@joss1985reproductive]. Since egg collection was done during half of the breeding season, each clutch likely came from a unique mother, so clutch identity captures potential maternal effects.  

We used the posterior distributions of parameters from these models to test for treatment differences in the ability to discriminate different numbers of crickets for each of the numerical tests. Because the posterior distributions were not always normally distributed, we report the median as the main measure of central tendency. We used the 95% Highest Posterior Density Intervals (95% HPDI) using the hdi function in bayestestR [@bayestestR] to test if the contrasts between treatments for all the variables or the _Interest_ per each test were different from zero. Given Choice was Bernoulli, we modified our null hypotheses to test if it differed from a probability of 0.5 as there were only two possible choices and if animals were choosing randomly we would predict each choice would have a 50% probability.  
 
#### Ethical note
Subjects were collected from a breeding colony that had been kept in the lab since 2019. All animals in this experiment were provided humane laboratory housing, thermoregulation opportunities, and light and humidity conditions (see above for details). Lizards in the colony received five to seven crickets per individual three times a week while the subjects in the experiment were fed once per day. All lizards were handled minimally to avoid stress. Experimental procedures and laboratory housing complied with Australian law and were approved by the Australian National University Animal Experimentation Ethics Committee (A2022_33). Upon completion of experimental trials, lizards were kept in their enclosure and will be euthanised following standard humane procedures once they reach the humane endpoint.  
 

## Results

```{r, data_process}
#| label: data_process
# Load the data and process it to get the main dfs
source(here("R", "data_process.R"))
```

```{r, sex_ratios}
#| label: sex_ratios
# Get the sex ratios for each treatment
sex <- c("m", "f")
trt <- c("A_23", "B_23", "A_28", "B_28")
for(s in sex){
  for(t in trt){
    count <- data_num %>%
      filter(day == 1, trt == t, sex == s) %>%
      nrow()
    
    name <- paste0(t, "_", s)   # e.g. "A_23_f"
    assign(name, count)
  }
}
```

```{r, models}
#| label: models
# Fitting the model and extraction of posteriors 
refit = FALSE
if(refit){
  # Get the formula and family of variables
  lat <- bf(log(latency) ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = gaussian())
  choice <- bf(choice ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = bernoulli(link = "logit"))
  int <- bf(compared_interest ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch),
    family = gaussian())
  # Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 4000, warmup = 1000, control = list(adapt_delta = 0.99, max_treedepth =12),
                data = data_num)
    # Write the model to a file
    saveRDS(model, file = here("output/models/model_num.rds"))
  } else {
      # Read the model from a file
      model <- readRDS(file = here("output/models/model_num.rds"))
  } 
# 
```

```{r, posteriors}
#| label: posteriors
# Code to extract posteriors from the model and get predicted values
source(here("R", "func.R"))
#
## Extract posteriors
posteriors <- as_draws_df(model)
# 
## Get predictions for every test and treatment based on the posteriors of the model. We used the function org_post (see func.R) to get the predictions.
#
# Latency
post_lat <- org_post("lat")
normality_results_lat <- check_normality(post_lat)
# Choice
post_choice <- org_post("choice")
prob_choice <- exp(post_choice)/(1 + exp(post_choice))
normality_results_choice <- check_normality(prob_choice)
write.csv(normality_results_choice, file = here("output/Checking/normality_results.csv"))
# Estimated interest for the higher amount of food
post_int <- org_post("int")
normality_results_int <- check_normality(post_int)
#
```

We recorded and analysed a total of 400 videos from 80 lizards (n = 20 per treatment, see @fig-results). The lizards were between `r min(data_num$age_raw)` and `r max(data_num$age_raw)` days post-hatching (see Fig. S5 in _Supplementary Material_). Final sample sizes were composed by 43 females and 37 males, with no less than 6 females per treatment and no more than 13.               

Overall, males showed lower latencies than females (median of the estimated effect of sex = `r {format_dec(median(posteriors$b_loglatency_sexm), 2)}`, 95% HPDI = [`r {format_dec(hdi(posteriors$b_loglatency_sexm, credMass = 0.95)[1], 2)}`, `r {format_dec(hdi(posteriors$b_loglatency_sexm, credMass = 0.95)[2], 2)}`]), and older individuals also made decisions faster (mean estimated effect of age = `r {format_dec(median(posteriors$b_loglatency_age),2)}`, 95% HPDI = [`r {format_dec(hdi(posteriors$b_loglatency_age, credMass = 0.95)[1], 2)}`, `r {format_dec(hdi(posteriors$b_loglatency_age, credMass = 0.95)[2],2)}`]; see Table S3 in _Supplementary Material_). However, we did not see any effect of age or sex on _Choice_ or _Interest_ (see _Supplementary Material_).  

```{r, fig-results}
#| label: fig-results
#| fig.cap: "Estimates of log-latency (Latency), the probability of choosing the larger number of crickets first (Choice), and the estimated interest in the larger number of crickets (Interest) for each of the numerical tests performed across different developmental treatments. The x-axis represents the estimate, and the y-axis is the posterior density of the estimates. The different colours indicate the different treatments. Points and bars represent the median and 95% Highest Density Intervals (95% HPDI) of the estimates, respectively. Vertical dashed lines in Choice and Interest graphs values 0.5 and 0, respectively. Asterisks indicate values significantly different from 0."
#
source(here("R", "func.R"))
#
#### A) Organise the df used for both parts of the figure for each variable
#
# First the df for violin plots for each variable using df_violin_plot function from func.r
df_viol_lat <- df_violin_plot("lat")
df_viol_choice <- df_violin_plot("choice")
df_viol_int <- df_violin_plot("int")
#
# Second the df for the points and bars plot for each variable using df_bars_plot function from func.r
df_bars_lat <- df_bars_plot("lat")
df_bars_choice <- df_bars_plot("choice")
df_bars_int <- df_bars_plot("int")
#
#### B) Make the plots for each variable using plotting function from func.r
#
fig_lat <- plotting("lat")
fig_choice <- plotting("choice") 
fig_int <- plotting("int")
#
#### C) Combine the plots and make final figure
fig_results <- plot_grid(fig_lat, fig_choice, fig_int, ncol = 1) +
  annotate("text", x = 0.305, y = 0.56, label = "*", size = 7, color = "black") + 
  annotate("text", x = 0.61, y = 0.505, label = "*", size = 7, color = "black")
ggsave("./output/figures/fig_results.pdf", plot=fig_results, width = 25, height = 25, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_results.pdf")
```

Neither temperature, CORT, or their interaction affected _Choice_ or _Interest_ in any of the tests, nor were there any clear patterns suggestive of an effect of the developmental environment on numerical discrimination (see Table 1 and @fig-results). Except for Hot-CORT lizards in 1 VS 3 tests or Cold-Control lizards in 2 VS 3 tests, the predicted probability of choosing the larger number of crickets first was not different from 0.5 (@fig-results; but also see Table S1 and Table S2 in _Supplementary Material_). Similarly, interest in the larger number of crickets (_Interest_) was not different from 0 in any of the tests (@fig-results; but also see Table S1 and Table S2 in _Supplementary Material_).  

_Table 1. Effects of temperature, CORT, and their interaction on Latency, Choice, and Interest in each of the numerical discrimination tests. The table shows the contrasts for each predictor (Temperature = [medianHot - medianCold]; Hormone = [medianControl - medianCORT]; and their Interaction = [(medianHot-Control - medianHot-CORT) - (medianCold-Control - medianCold-CORT)]). 95% Highest Density Intervals (95% HPDI) test the hypothesis that contrasts are different from zero._
```{r, tbl-data}
#| label: tbl-data
#| tbl-cap: "Effects of temperature, CORT, and their interaction on Latency, Choice, and Interest in each of the numerical discrimination tests. The table shows the contrasts for each predictor (Temperature = [medianHot - medianCold]; Hormone = [medianControl - medianCORT]; and their Interaction = [(medianHot-Control - medianHot-CORT) - (medianCold-Control - medianCold-CORT)]). 95% Highest Density Intervals (95% HPDI) test the hypothesis that contrasts are different from zero."
source(here("R", "func.R"))
#
# Making the df for each variable
#
## Initialize df_org as a list to store data frames for each variable
df_org <- list()
## Define variables and tests
variable <- c("Latency", "Choice", "Interest")
test <- c("1VS4", "1VS3", "2VS4", "2VS3", "3VS4")
## Loop over each variable
for(a in variable){
  # Select the original df to use depending on the variable
  if(a == "Latency"){
    post <- post_lat
  } else if(a == "Choice"){
    post <- prob_choice
  } else if(a == "Interest"){
    post <- post_int
  }
  df_tables <- data.frame()
  for(b in test){
    # Modify the df to get the values per each test
    post_mod <- post %>%
      dplyr::select(dplyr::matches(b))
    # Extract the required columns
    Cold_CORT <- post_mod[[paste0("X", b, "_Cold_CORT")]]
    Cold_Control <- post_mod[[paste0("X", b, "_Cold_Control")]]
    Hot_CORT <- post_mod[[paste0("X", b, "_Hot_CORT")]]
    Hot_Control <- post_mod[[paste0("X", b, "_Hot_Control")]]
    # Calculate effects and HDI values
    effect_hormone <- format_dec(median(c(Hot_Control, Cold_Control)) - median(c(Hot_CORT, Cold_CORT)), 1)
    effect_temp <- format_dec(median(c(Hot_CORT, Hot_Control)) - median(c(Cold_CORT, Cold_Control)), 1)
    interaction <- format_dec((median(Hot_Control) - median(Cold_Control)) - (median(Hot_CORT) - median(Cold_CORT)), 1)
    #
    hdi_hormone <- paste0("[", format_dec(hdi(c(Hot_Control, Cold_Control) - c(Hot_CORT, Cold_CORT))[1], 2), " , ",
                          format_dec(hdi(c(Hot_Control, Cold_Control) - c(Hot_CORT, Cold_CORT))[2], 2), "]")
    hdi_temp <- paste0("[", format_dec(hdi(c(Hot_CORT, Hot_Control) - c(Cold_CORT, Cold_Control))[1], 2), " , ",
                        format_dec(hdi(c(Hot_CORT, Hot_Control) - c(Cold_CORT, Cold_Control))[2], 2), "]")
    hdi_interaction <- paste0("[", format_dec(hdi((Hot_Control - Cold_Control) - (Hot_CORT - Cold_CORT))[1], 2), " , ",
                              format_dec(hdi((Hot_Control - Cold_Control) - (Hot_CORT - Cold_CORT))[2], 2), "]")
    # Define labels and values
    effects_predictors_names <- c("Hormone",
                          "Temperature",
                          "Interaction")
    values_predictors <- c(effect_hormone, effect_temp, interaction)
    values_hdi <- c(hdi_hormone, hdi_temp, hdi_interaction)
    # Create a temporary data frame for this loop iteration
    temporal_df <- data.frame(Predictor = effects_predictors_names,
                        Effect = values_predictors,
                        hdi = values_hdi,
                        Test = b,
                        stringsAsFactors = FALSE)
    # Merge the temporary data frame to the main df_tables
    df_tables <- rbind(df_tables, temporal_df)
  }
  df_tables$Variable <- a
  df_org[[a]] <- df_tables
}
# Combine all data frames in df_org into one data frame
table_df <- do.call(rbind, df_org)
# Convert the combined list into a data frame and modify for the table
table_df <- as.data.frame(table_df, stringsAsFactors = FALSE) %>%
  mutate(results = trimws(paste0(Effect, "\n", hdi))) %>%
  dplyr::select(Variable, Test, Predictor, results) %>%
  pivot_wider(names_from = Test, values_from = c(results), names_prefix = "")
#
#
# Making the table
#
## Table format
set_flextable_defaults(
 font.family = "Arial",
 font.size = 9)
# Create the table
real_table <- flextable(table_df) %>%
    align(align="center", part="all") %>% 
    add_header_row(values = c("", "Tests"), colwidths = c(2, 5)) %>%
    flextable::compose(i = c(3,6,8,9), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    flextable::compose(i = 2, j = 1, value = as_paragraph("log(latency)"), part = "body") %>%
    flextable::compose(i = 5, j = 1, value = as_paragraph("log(odds)"), part = "body") %>%
    hline(i = c(3,6), j = c(1:7), part = "body") %>% # To make some horizontal lines 
    set_table_properties(layout = "autofit", width = 1)
real_table
```


## Discussion
Contrary to our predictions that numerical cues would influence foraging decisions, and that elevated prenatal CORT or cold incubation temperatures would impair numerical discrimination, we found no significant differences across tests or treatments. Our results indicate that lizards did not discriminate between different numbers of crickets, nor did their performance vary under our experimental conditions. Overall, these findings suggest that _L. guichenoti_ did not use numerical or other potential quantitative cues for foraging decisions and that any decision-making was not affected by early environment.    

#### Foraging context may influence spontaneous quantity discrimination in _L. guichenoti_  
We found no evidence of numerical discrimination in any of the tests performed. One potential concern is that pre-test fasting could have caused indiscriminate foraging masking numerical discrimination, but it seems unlikely. First, if hunger alone were driving behaviour, we would expect random first choices but clear preferences during subsequent interactions, reflected in the discrimination index. Second, only 30 and 36 out of 400 observations showed lizards interacting with the greater or fewer option, respectively, for more than 250 seconds (out of 300 s). Together, these results suggest that hunger levels were not masking numerical discrimination.     

Previous research showed that other species within the Scincidae family use exclusively the OFS in spontaneous discrimination tests [@szabo_spontaneous_2021]. Here, we aimed to investigate whether _L. guichenoti_ could discriminate between different numbers of crickets in a spontaneous choice test relying exclusively on the OFS. To ensure that lizards decision relied on tracking discrete items rather than using non-numerical cues, we controlled for total length and total area — two variables that could influence ANS processing. We did this by rotating the position of the crickets in the smaller-choice option, making the total length and total area comparable in both choices [@agrillo2014spontaneous; @stancher2015numerical; @cooper2024tell]. The absence of discrimination in our experiment could be explained by _L. guichenoti_ relying on the ANS for quantity discrimination. Nonetheless, in two of our tests (1 VS 4 and 1 VS 3 crickets) cricket rotation was insufficient to control for total length (see _Supplementary Material: Control of size in both options_). Yet, we still did not find quantity discrimination in _L. guichenoti_, which suggests that neither the OFS nor the ANS were used. Instead, our results likely reflect a genuine lack of quantity discrimination in foraging-related spontaneous choice tests.     

The lack of spontaneous numerical discrimination in _L. guichenoti_ when presented with small quantities of food may be related to their insectivorous diet. Studies in which reptiles successfully discriminated small food quantities typically involved vegetables as stimuli [@gazzola2018continuous; @szabo_spontaneous_2021; @szabo2024spontaneous]. In contrast, insectivorous reptiles tested in spontaneous choice tasks with fewer than four prey items generally failed to discriminate [@miletto2017quantitative]. For example, _Podarcis siculus_ did not distinguish between small numbers (never more than four) of _Musca domestica_ larvae in a spontaneous choice test, although the same species was capable of quantity discrimination when prey size was the primary cue [@miletto2017quantitative] or when tested using a training paradigm [@miletto2018quantity]. These results suggest that the inability to discriminate in spontaneous tests is not due to a lack of cognitive capacity, but rather to decision-making strategies shaped by diet. In insectivorous lizards, the actual probability of obtaining a single prey item may be similar regardless of whether one or several items are present. Consequently, even though insectivorous lizards can discriminate small quantities under other conditions [see @recio_prey_2021], they may not use numerical cues in foraging decisions with small prey, as selecting larger numbers may not be advantageous.    

_Lampropholis guichenoti_ is described as a generalist insectivore that locates prey through a combination of active foraging and sit-and-wait behaviour [@lunney1989diets; @mo2021prey]. Although handling time may vary with prey size, field observations suggest relatively slow feeding rates. For example, @martin2015selective reported that when feeding ant alates, individuals consumed an average of only two alates every 15 minutes even when the prey was abundant. In such situations, the difference in payoff between small prey group sizes (e.g., 1 vs. 4) may be constrained by capture probability and effort, reducing the selective advantage of relying on numerical cues in foraging decisions.      
 
#### Foraging behaviour is robust to early environmental experiences 
Although the effects of early environment on cognition are widely studied, little attention has been paid to its impacts on numerical discrimination and decision-making. We found that teh time to make a decision (_Latency_) was not influenced by CORT elevations or incubation temperature, which suggests that _L. guichenoti_ may be robust to these early-life factors, at least in the context of foraging decisions. Previous studies have reported that pine snakes (_Pituophis melanoleucus_) incubated at low temperatures were slower and less proficient in capturing prey [@burger_effects_1991], and cold incubated bearded dragons (_Pogona vitticeps_) made more errors in a foraging task than warm-incubated lizards [@siviter2019egg]. Maternally transmitted GCs are also known to reduce exploration and neophilia in different taxa [@koolhaas1999coping; @hope_incubation_2018]. Additionally, both prenatal CORT and incubation temperature can influence metabolic rate (MR), which in turn could affect motivation in food-based learning paradigms [@noble_developmental_2018; @cossin2022effect; but see @trnik_persistent_2011; @crino_corticosterone_2014-learn]. In our design, we habituated lizards to the test conditions for two weeks before the experiment to minimise neophilia. And to control for motivation, we standardised hunger levels by providing only one cricket per day and fasting lizards for over 20 hours before testing. Additionally, we observed that all lizards consumed the cricket immediately after the test, showing similar levels of motivation. These measures likely minimised variation in decision time due to differences in exploration, neophilia, or hunger levels, which could explain why we did not detect an effect of prenatal conditions. Interestingly, we found that males and older lizards made decisions faster, although these factors were not central to our main hypotheses. Previous work suggests weak effects of sex on cognition in reptiles [@szabo2019sex], while age may have a stronger influence [@noble_age-dependent_2014]. Nevertheless, further studies are needed to explore how age and sex interact with early-life conditions in shaping behavioral responses.  

Prenatal treatments did not influence quantity discrimination in _L. guichenoti_ in our experiment. However, since none of the groups showed any kind of quantity discrimination in our tests, we cannot determine whether prenatal conditions affected the lizards' numerical abilities or not; and we cannot discount the possibility that early environmental factors may affect quantity discrimination under other approaches or contexts. For instance, testing numerical discrimination using learning paradigms yielded different results than spontaneous choice tests in _P. siculus_ [@miletto2017quantitative; @miletto2018quantity]. In fact, the only study we found that examined how developmental conditions influence numerical abilities showed that Port Jackson sharks (_Heterodontus portusjacksoni_) incubated at warmer temperatures learned a numerical rule faster than cold-incubated individuals [@vila_pouca_quantity_2019], but discrimination in a spontaneous test was not investigated. Given the potent effects of early environment on cognition and brain development [@szuran_water_1994; @zhu_prenatal_2004; @amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017; @lui2017chronic], it is crucial to explore how early environmental conditions shape numerical abilities across taxa employing different methodologies.  

#### Conclusion
Our study investigated whether _L. guichenoti_ could use the OFS to discriminate between different numbers of food items. Additionally, we were interested in exploring the impact of prenatal conditions on numerical abilities and decision-making in reptiles. Our findings suggest that _L. guichenoti_ does not rely on numerical information for foraging decisions, which limits the potential for early-life conditions to influence this specific ability. However, our results show that decision time does not vary due to prenatal temperature or CORT exposure, suggesting that this aspect of decision-making can be robust to early environmental conditions, at least in the context of foraging behaviour.  

The absence of numerical discrimination in _L. guichenoti_ in food-related spontaneous tests align with previous studies on insectivorous reptiles. However, it is critical to note that the methodologies employed in this study may not have fully captured the nuances of numerical cognition in _L. guichenoti_. For example, employing learning paradigms where animals must learn to follow a specific numerical rule can yield different results. Therefore, we recommend that future studies employ a broader array of tests and paradigms to more comprehensively assess numerical competence in this and related species. Furthermore, it would be relevant to study the effect of early environment on quantity discrimination to advance our understanding of numerosity across taxa.    

## Data accessibility  
All data, data description, and R code are available in public repository [https://github.com/Pablo-Recio/CORT-Temp_Numerical](https://github.com/Pablo-Recio/CORT-Temp_Numerical).  

## Declaration of AI use  
We declare Chat GPT was used for questions related to coding and data analyses. All other parts of the manuscript were written by the authors and those parts where AI were used were checked and modified accordingly by the authors.  

## Authors' contributions  
PR: conceptualization, methodology, data collection, data curation, formal analysis, writing—original draft, writing—review and editing; DL: data collection, writing—review and editing; OC: conceptualization, writing—review and editing; CF: conceptualization, funding acquisition, writing—review and editing; AP: data collection, writing—review and editing; DN: conceptualization, methodology, funding acquisition, project administration, resources, supervision, writing—review and editing.  
All authors gave final approval for publication and agreed to be held accountable for the work performed therein.  

## Conflict of interest declaration  
We declare we have no competing interests.  

## Funding  
This work was supported by a National Australian University PhD scholarship (PR), and the Australian Research Council (grant no. DP210101152) to DN and CRF.  

## Acknowledgements  
We thank the help and assistance of our lab technicians Benjamin Durant and Michelle Stephens for taking care of the lizards. We are also grateful ANU MakerSpace, where we designed and built the prototypes of the 3D-printed platforms. Finally, we wish to acknowledge the anonymous reviewers for their valuable feedback on the manuscript.  

## References
<div id="refs"></div>

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

# Supplementary Material

#### Effects of treatments on numerical discrimination using the estimates and the raw data

_Table S1.- Median and 95% Highest Density Intervals (95% HPDI) of the estimated probability of choosing first the higher amount (Choice) and the estimated interest for the higher amount of food (Interest) per treatment group for each of the numerical tests performed. 95% HPDI test the hypothesis that Choice = 0.5, and Interest = 0, which would indicate a preference towards one of choices._
```{r, tbl-disc}
#| label: tbl-disc
#| tbl-cap: "Median and 95% HPDI of the estimated probability of choosing first the higher amount (Choice) and the estimated interest for the higher amount of food (Interest) per treatment group for each of the numerical tests performed. 95% HPDI test the hypothesis that Choice = 0.5, and Interest = 0, which would indicate a preference towards one of choices."
#
source(here("R", "func.R"))
#
# Making the df for each variable
#
## Initialize df_org as a list to store data frames for each variable
disc_list <- list()
## Define variables and tests
variable <- c("Choice", "Interest")
test <- c("1VS4", "1VS3", "2VS4", "2VS3", "3VS4")
## Loop over each variable
for(c in variable){
  # Select the original df to use depending on the variable
  if(c == "Choice"){
    post <- prob_choice
    val <- 0.5
  } else if(c == "Interest"){
    post <- post_int
    val <- 0
  }
  df_disc <- data.frame()
  for(d in test){
    # Modify the df to get the values per each test
    post_mod <- post %>%
      dplyr::select(dplyr::matches(d))
    # Extract the required columns
    Cold_CORT <- post_mod[[paste0("X", d, "_Cold_CORT")]]
    Cold_Control <- post_mod[[paste0("X", d, "_Cold_Control")]]
    Hot_CORT <- post_mod[[paste0("X", d, "_Hot_CORT")]]
    Hot_Control <- post_mod[[paste0("X", d, "_Hot_Control")]]
    # Calculate medians and 95% HPDI
    Cold_CORT_median <- format_dec(median(Cold_CORT), 2)
    Cold_Control_median <- format_dec(median(Cold_Control), 2)
    Hot_CORT_median <- format_dec(median(Hot_CORT), 2)
    Hot_Control_median <- format_dec(median(Hot_Control), 2)
    #
    int_Cold_CORT <- paste0("[", format_dec(hdi(Cold_CORT, credMass = 0.95)[1], 2), " , ",
                            format_dec(hdi(Cold_CORT, credMass = 0.95)[2], 2), "]")
    int_Cold_Control <- paste0("[", format_dec(hdi(Cold_Control, credMass = 0.95)[1], 2), " , ",
                            format_dec(hdi(Cold_Control, credMass = 0.95)[2], 2), "]")
    int_Hot_CORT <- paste0("[", format_dec(hdi(Hot_CORT, credMass = 0.95)[1], 2), " , ",
                            format_dec(hdi(Hot_CORT, credMass = 0.95)[2], 2), "]")
    int_Hot_Control <- paste0("[", format_dec(hdi(Hot_Control, credMass = 0.95)[1], 2), " , ",
                            format_dec(hdi(Hot_Control, credMass = 0.95)[2], 2), "]")
    # Define labels and values
    treatment_names <- c("Cold-CORT (n = 20)", "Cold-Control", "Hot-CORT", "Hot-Control")
    values_medians <- c(Cold_CORT_median, Cold_Control_median, Hot_CORT_median, Hot_Control_median)
    values_int <- c(int_Cold_CORT, int_Cold_Control, int_Hot_CORT, int_Hot_Control)
    # Create a temporary data frame for this loop iteration
    temporal_df <- data.frame(Treatment = treatment_names,
                        Effect = values_medians,
                        int = values_int,
                        Test = d,
                        stringsAsFactors = FALSE)
    # Merge the temporary data frame to the main df_tables
    df_disc <- rbind(df_disc, temporal_df)
  }
  df_disc$Variable <- c
  disc_list[[c]] <- df_disc
}
# Combine all data frames in df_org into one data frame
disc_df <- do.call(rbind, disc_list)
# Convert the combined list into a data frame and modify for the table
disc_df_final <- as.data.frame(disc_df, stringsAsFactors = FALSE) %>%
  mutate(int = gsub("^= ", "", int)) %>%
  pivot_wider(names_from = Variable, values_from = c(Effect, int), names_prefix = "") %>%
  dplyr::select(Test, Treatment, 
                Effect_Choice, int_Choice,
                Effect_Interest, int_Interest) %>%
  mutate(Treatment = factor(Treatment, levels = c("Hot-Control (n = 20)",
                                      "Hot-CORT (n = 20)",
                                      "Cold-Control (n = 20)",
                                      "Cold-CORT (n = 20)"))) %>%
data.frame()
#
#
# Making the table
#
## Table format
set_flextable_defaults(
 font.family = "Arial",
 font.size = 10)
# Create the table
disc_table <- flextable(disc_df_final) %>%
    set_table_properties(width = 1) %>%
    align(align="center", part="all") %>% 
    flextable::compose(i = c(2:4,6:8,10:12,14:16,18:20), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    flextable::add_header_row(values = c("", "Choice", "Interest"), colwidths = c(2, 2, 2)) %>%
    flextable::compose(i = 2, j = c(3,5), value = as_paragraph("Median"), part = "head") %>% 
    flextable::compose(i = 2, j = c(4,6), value = as_paragraph("95% HPDI"), part = "head") %>% 
    hline(i = c(4,8,12,16), j = c(1:6), part = "body") %>% # To make some horizontal lines
    vline(i = c(1:20), j = 2, part = "body") %>% # To make some vertical lines
    vline(i = c(1:20), j = 4, part = "body") %>% # To make some vertical lines
    vline(i = c(1,2), j = 2, part = "head") %>%
    vline(i = c(1,2), j = 4, part = "head") 
disc_table
```

_Table S2.- Performance of each treatment in each of the numerical tests using the raw data. For the variable Latency and Interest, we show the median and the 95% CI. For the variable Choice, we show the proportion of individuals that chose the higher number of crickets first._

```{r, tbl-discraw}
#| label: tbl-discraw
#| tbl-cap: "Performance of each treatment in each of the numerical tests using the raw data. For the variable Latency and Interest, we show the median and the 95% CI. For the varaible Choice, we show the proportion of individuals that chose the higher number of crickets first."
#
data_table_raw <- data_num %>%
  dplyr::select(trt, test_type, latency, choice, compared_interest) %>%
  group_by(trt, test_type) %>%
  summarize(
    mean_latency = format_dec(mean(latency, na.rm = TRUE), 2),
    ci_latency_lower = format_dec(quantile(latency, 0.025, na.rm = TRUE), 2),
    ci_latency_upper = format_dec(quantile(latency, 0.975, na.rm = TRUE), 2),
    mean_interest = format_dec(mean(compared_interest, na.rm = TRUE), 2),
    ci_interest_lower = format_dec(quantile(compared_interest, 0.025, na.rm = TRUE), 2),
    ci_interest_upper = format_dec(quantile(compared_interest, 0.975, na.rm = TRUE), 2),
    Choice = as.character(sum(choice == 1, na.rm = TRUE))
  ) %>%
  ungroup() %>%
  mutate(
    ci_latency = paste0("[", ci_latency_lower, " , ", ci_latency_upper, "]"),
    ci_interest = paste0("[", ci_interest_lower, " , ", ci_interest_upper, "]"),
  ) %>%
  mutate(
    Latency = trimws(paste0(mean_latency, "\n", ci_latency)),
    Interest = trimws(paste0(mean_interest, "\n", ci_interest))
  ) %>%
  mutate(trt = recode(trt, 
            "B_23" = "Cold-CORT (n = 20)", 
            "A_23" = "Cold-Control (n = 20)", 
            "B_28" = "Hot-CORT (n = 20)", 
            "A_28" = "Hot-Control (n = 20)")) %>% # To order the treatments
  dplyr::select(test_type, trt, Latency, Choice, Interest) %>% 
  pivot_longer(cols = c(Latency, Choice, Interest), 
               names_to = "variable", 
               values_to = "value") %>%
  pivot_wider(names_from = test_type, 
              values_from = value) %>%
  dplyr::select(variable, trt, "1 VS 4", "1 VS 3", "2 VS 4", "2 VS 3", "3 VS 4") %>%
  mutate(variable = factor(variable, levels = c("Latency", "Choice", "Interest")),
         trt = factor(trt, levels = c("Hot-Control (n = 20)",
                                      "Hot-CORT (n = 20)",
                                      "Cold-Control (n = 20)",
                                      "Cold-CORT (n = 20)"))) %>%
  arrange(variable, trt) %>%
data.frame()
data_table_raw_b <- data_table_raw %>%
  rename(
    Variable = variable, 
    Treatment = trt, 
    "1 VS 4" = X1.VS.4,
    "1 VS 3" = X1.VS.3,
    "2 VS 4" = X2.VS.4,
    "2 VS 3" = X2.VS.3,
    "3 VS 4" = X3.VS.4) 
#
#
# Table format
set_flextable_defaults(
 font.family = "Arial",
 font.size = 10)
# Create the table
table_raw <- flextable(data_table_raw_b) %>%
  # Add your custom header rows
  flextable::add_header_row(values = c("", "Tests", ""), colwidths = c(4, 1, 2)) %>%
  # Take away some text
  flextable::compose(i = c(2,3,4,6,7,8,10,11,12), j = 1, value = as_paragraph(""), part = "body") %>%
  hline(i = c(4,8), j = c(1:7), part = "body") # To make some horizontal lines
table_raw
```



```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Model results

_Table S3A.- Summary of the model fitted for loglatency (Latency)_

```{r, summary_org}
#| label: summary_org
#
## Get the summary of the posteriors to get the estimates of each parameter of the model
sum <- summary(posteriors)
## Extract the values of the summary
sum_2 <- as.data.frame(sum) %>%
  dplyr::select(-mad) %>%
  filter(!str_detect(variable, "^r_"))
sum_df <- sum_2 %>%
  mutate(across(where(is.numeric), ~ sprintf(paste0("%.", 2, "f"), .)))  
```


```{r, tbl-summary_lat}
#| label: tbl-summary_lat
#| tbl-cap: "Summary of the model fitted for the latency variable."
#
source(here("R", "func.R"))
## Get df only for latency
df_sum_lat <- sum_table_org(sum_df, "lat")
## Make table
table_sum_lat <- flextable(df_sum_lat)
table_sum_lat
```


_Table S3B.- Summary of the model fitted for Choice_   
```{r, tbl-summary_choice}
#| label: tbl-summary_choice
#| tbl-cap: "Summary of the model fitted for the choice variable."
#
source(here("R", "func.R"))
## Get df only for choice
df_sum_choice <- sum_table_org(sum_df, "choice")
## Make table
table_sum_choice <- flextable(df_sum_choice)
table_sum_choice
```


_Table S3C.- Summary of the model fitted for Interest_  
```{r, tbl-summary_int}
#| label: tbl-summary_int
#| tbl-cap: "Summary of the model fitted for the interest variable."
#
source(here("R", "func.R"))
## Get df only for interest
df_sum_int <- sum_table_org(sum_df, "int")
## Make table
table_sum_int <- flextable(df_sum_int)
table_sum_int
```


_Table S3D.- Summary of the model fitted for other effects_  
```{r, tbl-summary_other}
#| label: tbl-summary_other
#| tbl-cap: "Summary of the model fitted for other effects."
#
source(here("R", "func.R"))
## Get df only for interest
df_sum_other <- sum_df %>%
  filter(!str_detect(variable, "^b_"))
## Make table
table_sum_other <- flextable(df_sum_other)
table_sum_other
```


```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Testing potential side biases

_Table S4.- Number of individuals per treatment that chose the right (R) or left (L) side in each of the numerical tests. p-value indicates the result of the binomial test comparing the number of choices between sides._ 
```{r, tbl-sides}
#| label: tbl-sides
#| tbl-cap: "Number of individuals per treatment that chose the right (R) or left (L) side in each of the numerical tests. p-value indicates the result of the binomial test comparing the number of choices between sides."
source(here("R", "func.R"))
#
# 1) MAKING THE DF FOR THE TABLE
data_sides <- data_num %>%
  group_by(trt, test_type) %>% # Group by treatment and test
  summarise(
    right_choices = sum(side_choice == "Right", na.rm = TRUE),
    left_choices = sum(side_choice == "Left", na.rm = TRUE),
  ) %>% # Count the number of correct choices
  rowwise() %>%  # Ensure that mutate works row by row
  mutate(
    total_choices = right_choices + left_choices,  # Calculate total choices
    p_value = format_dec(binom.test(right_choices, total_choices)$p.value, 2)  # Perform binom test
  ) %>% # Test for differences between sides
  ungroup() %>%  # Remove rowwise grouping
  mutate(choices_Right_Left_p = paste0("R = ", right_choices, " | L = ", left_choices, " , p = ", p_value), # Create a column with the choices
        trt = recode(trt, 
                 "B_23" = "CORT-Cold (n = 20)", 
                 "A_23" = "Control-Cold (n = 20)", 
                 "B_28" = "CORT-Hot (n = 20)", 
                 "A_28" = "Control-Hot (n = 20)")) %>% # To order the treatments
  dplyr::select(trt, test_type, choices_Right_Left_p) %>% # Remove unused columns
  pivot_wider(names_from = test_type, values_from = c(choices_Right_Left_p)) %>% # To split between tests
data.frame()
#
# 2) MAKING THE TABLE
#
# Split the table_data df by task
sides_table <- flextable(data_sides) %>%
  compose(j = 1, value = as_paragraph(""), part = "header") %>%
  compose(j = 2, value = as_paragraph("1 VS 4"), part = "header") %>%
  compose(j = 3, value = as_paragraph("1 VS 3"), part = "header") %>%
  compose(j = 4, value = as_paragraph("2 VS 4"), part = "header") %>%
  compose(j = 5, value = as_paragraph("2 VS 3"), part = "header") %>%
  compose(j = 6, value = as_paragraph("3 VS 4"), part = "header") %>%
  set_table_properties( width = 0.9, layout = "autofit") %>%
  align(align = "center", part = "all")
sides_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Control of size in both options
On the videos of half of the lizards, we estimated the length of both options using the ruler tool on Photoshop 2024. For each choice in each test, we first calibrated the masure of one centimeter using the length of the bottom of the platform (see Fig below). After calibrating, we measured the length of the crickets at their maximum length, trying to keep the line parallel to the bottom of the platform (see below). The results are shown in Table S4.

```{r, fig-S1}
#| label: fig-S1
#| fig.cap: "Calibration of the ruler tool in Photoshop 2024. The bottom of the platform was used to calibrate the ruler tool to measure the length of the crickets."
#
knitr::include_graphics("./Others/Calibration.png")
```


```{r, fig-S2}
#| label: fig-S2
#| fig.cap: "Measurement of the length of the crickets. The ruler tool was used to measure the length of the crickets at their maximum length."
#
knitr::include_graphics("./Others/Measure.png")
```


_Table S4.- Mean length (cm) of the crickets in each of the numerical tests. The difference in length between the two options is also shown, with the 95% CI._
```{r, tbl-size}
#| label: tbl-size
#| tbl-cap: "Mean length (cm) of the crickets in each of the numerical tests. The difference in length between the two options is also shown, with the 95% CI."
table_size <- flextable(data_length) %>%
  flextable::compose(j = 1, value = as_paragraph("Test"), part = "header") %>%
  flextable::compose(j = 2, value = as_paragraph("Mean length small (cm)"), part = "header") %>%
  flextable::compose(j = 3, value = as_paragraph("Mean length large (cm)"), part = "header") %>%
  flextable::compose(j = 4, value = as_paragraph("Mean differences in length"), part = "header") %>%
  flextable::compose(j = 5, value = as_paragraph("95% CI differences in length"), part = "header") %>%
  set_table_properties( width = 0.9, layout = "autofit") %>%
  align(align = "center", part = "all")
#
table_size
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Prey orientation test
We performed a choice test to investigate if the orientation of crickets affected the lizards’ choice. We used the same platform and Petri dish as in the numerical discrimination task, but we placed one cricket on each side of the platform, one oriented vertically in respect to the shelter position (see @fig-Methods B) and the other one horizontal to the shelter. We performed a unique trial randomising the position of the orientation of the cricket. We recorded the number of individuals that chose the cricket oriented vertically and horizontally. Results are shown in the table below.

_Table S5.- Number of individuals per treatment that chose the cricket oriented horizontally (Horizontal) or vertically (Vertical) in our control tests. p-value indicates the result of the binomial test comparing the number of choices between both choices._
```{r, tbl-orientation}
#| label: tbl-orientation
#| tbl-cap: "Number of individuals per treatment that chose the cricket oriented horizontally (Horizontal) or vertically (Vertical) in our control tests. p-value indicates the result of the binomial test comparing the number of choices between both choices."
source(here("R", "func.R"))
#
# 1) MAKING THE DF FOR THE TABLE
data_or_res <- data_orient %>%
  mutate(choice_or = ifelse(choice_horizontal == 0, "Vertical", "Horizontal")) %>%
  dplyr::select(trt, choice_horizontal, choice_or) %>%
  group_by(trt) %>% # Group by treatment and test
  summarize(
    Horizontal_Count = sum(choice_or == "Horizontal"),
    Vertical_Count = sum(choice_or == "Vertical")
  ) %>% # Count the number of horizontal and vertical choices
  rowwise() %>%  # Ensure that mutate works row by row
  mutate(
    total_choices = Horizontal_Count + Vertical_Count,  # Calculate total choices
    p_value = format_dec(binom.test(Horizontal_Count, total_choices)$p.value, 3)  # Perform binom test
  ) %>% # Test for differences between sides
  ungroup() %>%  # Remove rowwise grouping
  mutate(trt = recode(trt, 
            "B_23" = "Cold-CORT (n = 20)", 
            "A_23" = "Cold-Control (n = 20)", 
            "B_28" = "Hot-CORT (n = 20)", 
            "A_28" = "Hot-Control (n = 20)"),
          trt = factor(trt, levels = c("Hot-Control (n = 20)",
                                  "Hot-CORT (n = 20)",
                                  "Cold-Control (n = 20)",
                                  "Cold-CORT (n = 20)"))) %>% # To order the treatments
  dplyr::select(trt, Horizontal_Count, Vertical_Count, p_value) %>% # Remove unused columns
data.frame()
#
# 2) MAKING THE TABLE
#
# Split the table_data df by task
orient_table <- flextable(data_or_res) %>%
  flextable::compose(j = 1, value = as_paragraph(""), part = "header") %>%
  flextable::compose(j = 2, value = as_paragraph("Horizontal"), part = "header") %>%
  flextable::compose(j = 3, value = as_paragraph("Vertical"), part = "header") %>%
  flextable::compose(j = 4, value = as_paragraph("p-value"), part = "header") %>%
  set_table_properties( width = 0.9, layout = "autofit") %>%
  align(align = "center", part = "all")
orient_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Searching for relevant literature
To look for relevant literature about the effects of early environment on numerical discrimination, we searched in the Web of Science and Scopus using the terms on respectively. The queries employed are detailed below. We looked for manuscripts for all years available. The last search was conducted on the 11^th^ of October 2024; the results below refer to this last search.    

We found 24 articles on Web of Science and 22 on Scopus, plus one preprint on Scopus. Out of all the documents, only one study was relevant to our search: @vila_pouca_quantity_2019. That study appeared in both databases and was the only one that explored the effects of early environment on numerical abilities.

```{r, fig-searchWOS}
#| label: fig-searchWOS
#| fig.cap: "Search query on Web of Science."

knitr::include_graphics("./Others/Web of Science Search results.png")

```

```{r, fig-searchScopus}
#| label: fig-searchScopus
#| fig.cap: "Search query on Scopus."

knitr::include_graphics("./Others/Scopus - Document search results.png")

```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Lizards age by Treatment

```{r, fig-age_treatment}
#| label: fig-age
#| fig.cap: "Distribution of the age of the lizards by treatment"
# Plotting the distribution of the age of the lizards by treatment
#
plot_age_df <- data_num %>%
  mutate(trt = factor(trt, 
          levels = c("A_23", "B_23", "A_28", "B_28"), 
          labels = c("Cold-Control", "Cold-CORT", "Hot-Control", "Hot-CORT")))
#
plot_age <- ggplot(plot_age_df, aes(x = age_raw, color = trt)) +
  geom_density(aes(y = after_stat(count)), linewidth = 1.5) +
  scale_color_manual(values = c("Cold-CORT" = "#00008B",
                              "Cold-Control" = "#68bde1",
                              "Hot-CORT" = "#b50101",
                              "Hot-Control" = "#fa927d")) +  
  labs(y = "Number of lizards", x = "Age (days)", color = "Treatments") +
  theme_classic() +
  theme(plot.margin = margin(5.5, 5.5, 5.5, 5.5, "mm"),
    axis.text.y = element_text(size = 12, family = "Times"),   # Remove y-axis labels
    axis.title = element_text(size = 12, family = "Times"),
    axis.text = element_text(size = 10, family = "Times"),
    legend.position = "right",
    legend.title = element_text(size = 12, family = "Times"),
    legend.text = element_text(size = 11, family = "Times")
    ) 
#
ggsave("./output/figures/plot_age.png", plot=plot_age, width = 25, height = 18, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/plot_age.png")
```

Fig. S5 - Distribution of the age of the lizards by treatment

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Checking the model plots  
```{r, checking_model, out.width="70%", fig.align="center"}
# Chunk for plotting the model
## Initial plot
plot(model)
#
## pp_checks
pp_check(model, resp = "loglatency")
pp_check(model, resp = "choice")
pp_check(model, resp = "comparedinterest")
```
