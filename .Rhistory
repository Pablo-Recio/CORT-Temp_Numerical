pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, forcats, MASS,
fitdistrplus)
# Load the data and process it to get the main dfs
source(here("R", "data_process.R"))
# Get the formula and family of variables
  lat <- bf(log(latency) ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = gaussian())
choice <- bf(choice ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = bernoulli(link = "logit"))
int <- bf(compared_interest ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch),
    family = student())
# Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99),
                data = data_num)
# Read the model from a file
      model2 <- readRDS(file = here("output/models/model_num.rds"))
# Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99), treedepth(12),
                data = data_num)
# Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99, max_treedepth(12)),
                data = data_num)
# Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99, max_treedepth =12),
                data = data_num)
#
pp_check(model2, resp = "loglatency")
#
pp_check(model2, resp = "latency")
pp_check(model2, resp = "choice")
pp_check(model2, resp = "comparedinterest")
#
pp_check(model, resp = "loglatency")
pp_check(model, resp = "choice")
pp_check(model, resp = "comparedinterest")
# Get the formula and family of variables
  lat <- bf(log(latency) ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = gaussian())
choice <- bf(choice ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = bernoulli(link = "logit"))
int <- bf(compared_interest ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch),
    family = gaussian())
# Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 3000, warmup = 1000, control = list(adapt_delta = 0.99, max_treedepth =12),
                data = data_num)
#
pp_check(model, resp = "loglatency")
pp_check(model, resp = "choice")
pp_check(model, resp = "comparedinterest")
# Chunk for plotting the model
#
# Extract residuals
residuals <- residuals(model)
## Latency
lat_residuals <- residuals[, "Estimate", "loglatency"]
## Choice
choice_residuals <- residuals[, "Estimate", "choice"]
## Interes
int_residuals <- residuals[, "Estimate", "comparedinterest"]
#
# Q-Q plots
## Latency
qqnorm(lat_residuals)
qqline(lat_residuals, col = "red")
## Choice
qqnorm(choice_residuals)
qqline(choice_residuals, col = "red")
## Interest
qqnorm(int_residuals)
qqline(int_residuals, col = "red")
hist(data_num$compared_interest)
qqnorm(data_num$compared_interest)
qqline(data_num$compared_interest, col ="red")
a <- data_num$compared_interest + min(data_num$compared_interest)
hist(a)
str(a)
b <- min(data_num$compared_interest)
b
c <- max(data_num$compared_interest)
c
min(data_num$compared_interest)
str(data_num)
min(data_num$compared_interest)
a <- min(data_num$compared_interest, na.rm = TRUE)
a
b <- data_num$compared_interest + [a]
b <- data_num$compared_interest + |a|
b <- data_num$compared_interest - a
b
hist(b)
hist(data_num$compared_interest)
hist(b)
qqnorm(b)
qqline(b)
qqnorm(log(b))
c <- b+1
qqnorm(log(c))
qqnorm(sqrt(c))
qqnorm(b)
qqline(b)
mean(data_num$compared_interest)
mean(data_num$compared_interest, na.rm = TRUE)
min(data_num$compared_interest, na.rm = TRUE)
max(data_num$compared_interest, na.rm = TRUE)
sd(data_num$compared_interest, na.rm = TRUE)
pp_check(model, resp = "comparedinterest")
#
# Q-Q plots
## Latency
qqnorm(lat_residuals)
qqline(lat_residuals, col = "red")
## Choice
qqnorm(choice_residuals)
qqline(choice_residuals, col = "red")
## Interest
qqnorm(int_residuals)
qqline(int_residuals, col = "red")
#
pp_check(model, resp = "loglatency")
pp_check(model, resp = "choice")
pp_check(model, resp = "comparedinterest")
# Chunk for plotting the model
#
# Extract residuals
residuals <- residuals(model)
## Latency
lat_residuals <- residuals[, "Estimate", "loglatency"]
## Choice
choice_residuals <- residuals[, "Estimate", "choice"]
## Interes
int_residuals <- residuals[, "Estimate", "comparedinterest"]
hist(data_num$latency)
hist(log(data_num$latency))
qqnorm(log(data_num$latency))
qqline(log(data_num$latency))
max(data_num$compared_interest, na.rm() = TRUE)
max(data_num$compared_interest, na.rm  = TRUE)
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, forcats, MASS,
fitdistrplus, loo)
loo(model)
loo(model, moment_match = TRUE)
