---
docx: 
bibliography: "./bib/refs.bib"
csl: "./bib/behavioral-ecology-and-sociobiology.csl"
reference-doc: "./bib/tmpl.docx"
execute:
  echo: false
  error: false
  cache: false
  warning: false
link-citations: true
crossref:  
  fig-title: Fig    # (default is "Figure")
  title-delim: —     # (default is ":")
  fig-prefix: Fig.   # (default is "Figure")
  tbl-prefix: Table  # (default is "Table")
editor_options: 
  chunk_output_type: console
---

```{r, packages}
#| label: packages
pacman::p_load(tidyverse, flextable, emmeans, DHARMa, brms, here, ggplot2, lme4, zoo, lmerTest, broom, tidybayes, forcats, MASS,
fitdistrplus, ggh4x, PupillometryR, cowplot, png, grid, remotes, ggthemes)
```

## Introduction  

The ability to discern between more and less quantities is a basic cognitive skill widely observed across the animal kingdom (**Stancher et al. 2015; Vonk and Beran 2012; Beran et al. 2014**), and is considered to be adaptive in different ecological contexts (**Nieder 2017, 2018**). Female lions (_Panthera leo_), for example, can use numerical information to assess the risk of confronting rival groups (**McComb et al. 1994**); but other animals can employ quantitative abilities for navigation (**Chitka and Geiger 1995**), mate selection (**Carazo et al. 2009**) or foraging (**Uller et al. 2003**). Given the pervasive advantages of numerical and quantity discrimination, research has extensively explored the ability of different species to differentiate between quantities under different contexts and paradigmas. Some studies focus on the type of cues involved in quantitative competences (**REFs**), others on the context where animals may use these abilities (**REFs above**), and others in the neural mechanisms underlying quantitative and numerical discrimination (**REFs**). The later have demonstrated that non-verbal numerical representations activate an extensive cortical network, with the prefrontal cortex and the intraparietal sulcus being particularly relevant (**Nieder, 2005**). This link between numerosity and brain physiology underscores the importance of understanding how brain development influences numerical abilities.  

Animal's brain is particularly sensitive to environmental inputs during early stages of development [@coomber_independent_1997; @zhu_prenatal_2004], with long-lasting effects on cognitive abilities [@zhu_prenatal_2004; @amiel_egg_2014]. For instance, increases in glucocorticoids (GCs) - the main groups of hormones mediating the response to stressors [@sapolsky_how_2000] - during early life can alter animals' performance in spatial, associative, or reversal learning tasks [@szuran_water_1994; @zhu_prenatal_2004; @crino_corticosterone_2014-learn; @farrell_developmental_2015-learn; @bebus_associative_2016; @lui2017chronic]. These effects have been shown to vary depending on factors such as dose, subjects' sex, or type of cognitive test employed [@szuran_water_1994 @farrell_developmental_2015-learn; @bebus_associative_2016], but little is known about how exposure to GCs during development can affect quantitative abilities. Similarly, thermal early environment plays a prominent role in brain development and cognitive abilities in ectotherms [@coomber_independent_1997;@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017; @vila_pouca_incubation_2018; @vila_pouca_quantity_2019]. For example, Port Jackson shark incubated at elevated-temperatures learned faster in a quantity discrimination task [@vila_pouca_quantity_2019]. However, the effects of early thermal environment on numerical abilities in other taxa remain unknown. In this sense, not only is it well-established that early-life GCs and thermal environment independently affect cognitive abilities, but these factors are also predicted to interact. In vertebrates, abrupt changes in temperature can lead to increased GC levels which, in turn, may elevate GCs in their offspring [@racic_effects_2020; @Crino_2023]. Simultaneously, these offspring are directly influenced by the same thermal environment, resulting in significant interactions that can impact cognitive development. As such, and given the ecological importance of quantitative abilities in nature [**Nieder 2017, 2018**], it is crucial to study the combined effects of early-life GCs and thermal environment on quantity and numerical discrimination. Here, we investigate the effects of prenatal exposure to corticosterone (CORT) - the main GC in reptiles [@Crino_2023] - and thermal environment on the ability of lizards to discriminate between different number of food items using the Common garden skink (_Lampropholis guichenoti)_ as a model species.  

Traditionally, the study of numerical abilities has been mainly focused on mammals, birds, and fishes (**Agrillo and Bisazza 2014; Nieder 2017**), but recent research has shown that reptiles are also competent in numbers. Red-footed turtles (_Chelonoidis carbonaria_) rapidly learned to associate colour to higher volumes of food (**Soldati et al. 2017**), Hermann’s tortoises (_Testudo hermanni_) proved to discriminate between big and small amounts off food in a spontaneous choice test (**Gazzola et al. 2018**), and freshwater turtles (_Trachemys scripta_ and _Mauremys sinensis_) showed high skills when tested in a trained quantity discrimination task (**Lin et al. 2021, 2024**). In lizards, __Podarcis siculus_ did not discriminate between different amounts of food in a spontaneous choice test (**Miletto-Petrazzini et al. 2017**), but were successful in a trained quantity discrimination task (**Miletto-Petrazzini et al. 2018**), rock lizards (_Iberolacerta cyreni_) chose bigger quantities of crickets when presented 5 versus 10 items [@recio_prey_2021], and Gidgee skinks (_Egernia stokesii_) used numbers to select the larger amount of food in a spontaneous choice test [@szabo_spontaneous_2021]. Inded, the literature evidences basic quantitative abilities in reptiles, that may vary with the type of cue and test employed. However, the question of how early environment can affect numerical abilities remains open as, to our knowledge, there is no study investigating how early life conditions impact numerical discrimination in this group. Incubating lizards at elevated temperatures has been shown to improve cognitive abilities in consistency with elevated neuronal density in some areas of the brain [@amiel_hotter_2012; @amiel_egg_2014; @clark_colour_2014; @amiel_effects_2017]; and thermal environment impaired cognition only under incubation temperatures beyond lizards' natural range [@dayananda_incubation_2017 or @abayarathna_effects_2020]. Our understanding of the effects of prenatal CORT on cognitive abilities in reptiles is less understood, but in other taxa, high levels of GCs are tipically related to cognitive impairments [@szuran_water_1994; @zhu_prenatal_2004].  

In our study, we manipulated CORT concentration in eggs and incubated them under one of two temperature regimes (Cold -- 23ºC ± 3ºC or Hot -- 28ºC ± 3ºC) in a 2x2 factorial design. After hatching, we assessed the lizards' numerical discrimination abilities in a spontaneous choice test, where they selected between different numbers of crickets. We hypothesized that lizards incubated at higher temperatures would outperform those incubated at lower temperatures in the numerical discrimination task. Additionally, we predicted that increased CORT levels would impair numerical competence. Moreover, we expected the negative impact of CORT on numerical performance to be more pronounced in lizards incubated at lower temperatures compared to those in higher temperatures. In line with Weber's law [**REFs**], we further anticipated that lizards incubated at higher temperatures would successfully discriminate between quantities even at high ratios (e.g. 3 VS 4), whereas event the lowest ratios (1 VS 4) could be challenging for those incubated with CORT.  

## Methods  

#### Husbandry  
*Breeding colony* -- Lizards tested in out experiment came from a breeding colony established in the lab since 2019. The colony consists of approx. 180 adults of and _L. guichenoti_ housed in commonal containers (41.5 L x 30.5 W x 21 H cm) with six lizards (2 males and 4 females) per enclosure. Enclosures are provided with non-stick matting, shelter, and several small water dishes filled daily; and lizards are fed mid-size crickets (*Acheta domestica*) three days a week. Crickets are dusted with calcium weekly and multivitamin and calcium biweekly. Room temperatures are set to 22-24ºC, but to ensure a temperature gradient, we employ a heat chord and a heat lamp following a 12 h light:12 h dark cycle, keeping the warm side of enclosures at 32ºC.  

*Eggs collection and incubation* -- Between mid-October 2023 to the end of February 2024, we placed small boxes (12.5 L x 8.3 W x 5 H cm) with moist vermiculite inside in one extreme of the communal enclosures (see above) to provided females with a place to lay the eggs. We checked for the presence of eggs in the boxes three days a week. Eggs' length and width were measured with a digital caliper to the nearest 0.1 mm, while mass was recorded with a (OHAUS, Model spx123) digital scale ± 0.001g error. Eggs were assigned a clutch number and a individual identity. Then we treated eggs with CORT or vehicle (see CORT and Temperature manipulation below) and placed them in individual cups (80 mL) with moist vermiculite (12 parts water to 4 parts vermiculite). We covered the cups with cling wrap to retain moisture and then left the eggs in LATWIT 2X5D-R1160 incubators at two different temperatures (see CORT and Temperature manipulation below) until hatching.  

*Hatchlings* -- Incubators were checked three times a week for the presence of hatchlings. Once hatchlings were collected, we measured SVL and Tail Length (TL) with a ruler to the nearest mm, and weighed them with a (OHAUS, Model spx123) digital scale ± 0.001g error. Hatchlings were then placed in individual enclosures (18.7L x 13.2W x 6.3H cm) provided with non-stick matting and a small water dish. During this period, they were sprayed water every day and received 3-6 small *A. domestica* crickets three times a week. All care otherwise follows similar protocols to adults (see above).  


#### Manipulating Early Thermal and CORT Environments  

We manipulated CORT concentration in eggs and incubated them under one of two temperature regimes (Cold -- 23ºC ± 3ºC or Hot -- 30ºC ± 3ºC) in a 2x2 factorial design (@fig-Methods A). We first allocated eggs onto one of two different treatments: in the CORT treatment, eggs were topically supplied with 5µL of CORT dissolved in 100% Ethanol (vehicle) at a final (10 pg CORT/mL) concentration; in the Control treatment eggs received an equal volume of the vehicle. CORT concentration employed in the CORT treatment represents 2 standard deviations above the mean natural concentration obtained in eggs from both species (non-published data). Then, eggs were incubated in one of the two previously mentioned temperature regimes (Cold or Hot) until hatching. This temperatures represent the upper and lower limit of the natural incubation temperatures [@qualls2000post]. The number of eggs per clutch assigned to each hormone and temperature treatment were counterbalanced in both species.  

#### Numerical discrimination task  

Two weeks before starting the experimen phase (see below), lizards were moved to the experimental arena for acclimatation. The arenas were individual medium size (41 L x 29.7 W x 22 H cm) plastic containers provided with a shelter (9 L x 6 W x 1.5 H cm) on one of the extremes and a water dish on the center (@fig-Methods B). The new enclosures were placed in 7 different racks located in two different rooms. Each rack was associated to its own CCTV systems (device model DVR-HP210475) allowing us to record lizards' behaviour during the experiment. The number of lizards per species and treatment in each rack was counterbalanced to control for any effect of the room or the position of the lizard in the rack. During acclimatation and throughout the experiment, lizards were fed with only one cricket per day dusted with calcium and multivitamin (see protocol below), and water was supplied *ad libitum*. The temperature of both rooms was set to between 22-24ºC, but we also provided a temperature gradient by means of a heat cord along the center of the arena, and heat lamps in a 12 h light: 12 h dark cycle.  

The numerical discrimination test consisted in a series of two-choice trials where lizards where presented with different number of food items. Each choice was placed in one of two sides of a white 3D printed platform (see @fig-Methods B, C) and then covered with a transparent Petri dish to prevent the lizard from obtaining the food. We performed five tests that differed in the ratio between both choices: 1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4. We never used more than four items because higher numbers are considered to be encoded by different regions of the brain [**REFs**]. The food consisted in frozen small crickets (*A. domestica*) that were thawed and dusted with calcium and multivitamin. We decided to use frozen crickets to avoid movement to affect lizards' behaviour. Lizards were fed frozen crickets during one month before the beginning of the experiments for habituation to frozen prey. Two weeks before the experiments, to habituate lizards to the platform and the Petri dish, the frozen cricket that was placed on top of the Petri dish in one of the sides of the platform, simulating the conditions of the experiment (see @fig-Methods B). The side where the food was placed was changed every day to avoid any side bias during the trials. However, to further control for that, the side where we placed the higher number of crickets was randomised between trials and individuals. We also counterbalanced the amount of individuals per treatment tested in the same type of trial each day. The crickets used during the experiment were all the same size, but to control for other quantitative traits 
(**Uller et al. 2003; Krusche et al. 2010; Abramson et al. 2011; Garland et al. 2012; Vonk and Beran 2012; Gómez-Laplaza and Gerlai 2013; Mehlis et al. 2015**), we changed the orientation of the crickets as shown in @fig-Methods D. In addition, after the experiments, we made another set of trials to test whether the orientation of the crickets could affect lizards' choice, but we found no effect of orientation (see Supplementary Material - Prey orientation test).  

All tests were done between 10 and 12 in the morning when the lizards were most active. Each trial was performed daily for five days, between the 17^th^ to the 22^nd^ of May 2024. We recorded three main variables: i) Latency, defined as the time between the start of the test - when the platform was left in the enclosure - until the first interaction with one of the options; ii) First choice of the lizard, recorded as 1 if the lizard interacted first with the larger amount or 0 if not; and iii) Interest shown for the higher amount of food (detailed below). We considered that the lizard was interacting with the food when it touched the Petri dish with its snout or when the front half of the body was on top of the platform. For five minutes after the first interaction with one of the options, we recorded the time spent interacting with that option for a maximum of five minutes; we did this for both amounts of food independently of what was the first choice. We measured the interest shown for the higher amount of food by substracting the time interacting with the option with less crickets to the time spent interacting with the larger amount of food. If there was no interaction with one of the options during the test, we considered the time spent as 0 for that option. When there was no interaction with any of the choices, both Latency, First choice, and Interest were noted as NA. We also considered Interest as NA in some few cases where the animals managed to lift the dish and eat the prey; Latency and First choice were recorded and employed in the analyses. We excluded from the analyses all the individuals that did not make any choice in three or more tests.   

```{r, fig-Methods}
#| label: fig-Methods
#| fig.cap: "Experimental design of early environment manipulation (**A**), numerical discrimination arena an measures(**B**), measures of the platform used for the experiments (**C**), and types of numerical trial (**D**), where each line indicates the position and orientation of the food items in each test."

knitr::include_graphics("./Others/NUMDIS_FIG_1.png")

```

#### Statistical analyses  
In our analyses, we fitted a multivariate Bayesian multilevel model using the brm function from the _brms_ package [@burkner2017brms] in R extension (version 2.8.2) [@R]. We ran four parallel MCMC chains of 4000 iterations with a warmup period of 1000 iterations. We modelled the three main recorded behaviour: Latency (log-transformed), Choice, and Interest (see above) as the response variables, and test (1 VS 4, 1 VS 3, 2 VS 4, 2 VS 3, 3 VS 4), hormone (CORT versus Control), incubation temperature (Cold versus Hot) and their interaction as fixed factors. We also included in our predictors sex, and age (centered to 0). We included lizard indentity and clutch as random factors. We used the posterior distributions of parameters from these models to test for differences in the ability to discriminate between different number of crickets between treatments and species, for each of the numerical tests. We calculated the contrast between treatments for each test using p~mcmc~ values, and we also estimated whether predicted Choice and Interest differed from 0.5 or zero respectively using p~mcmc~. We considered statistical significance if p~mcmc~ < 0.05.  
 
#### Ethical note
Subjects were collected from a breeding colony kept in the lab since 2019. All animals used in this experiment were provided humane laboratory housing, with thermorregulation opportunity, light, and humidity conditions (see above for details). Lizards in the colony received five-seven crickets per individual three times a week while the subjects in the experiment were fed once per day. All lizards were handled minimally to avoid stress. Experimental procedures and laboratory housing complied with Australian law and were approved by the Australian National University Animal Experimentation Ethics Committee (A2022_33). Upon completion of experimental trials, lizards were kept in their enclosure and will be euthanized following standard humane procedures once they reach the human-ending point.  
 

## Results

```{r, data_process}
#| label: data_process
# Load the data and process it to get the main dfs
source(here("R", "data_process.R"))
```

```{r, models}
#| label: models
# Fitting the model and extraction of posteriors 
refit = FALSE
if(refit){
  # Get the formula and family of variables
  lat <- bf(log(latency) ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = gaussian())
  choice <- bf(choice ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch), family = bernoulli(link = "logit"))
  int <- bf(compared_interest ~ test_type*temp*cort + sex + age + (1|lizard_id) + (1|clutch),
    family = gaussian())
  # Fit the model
  model <- brm(lat + choice + int,
                chains = 4, cores = 4, iter = 4000, warmup = 1000, control = list(adapt_delta = 0.99, max_treedepth =12),
                data = data_num)
    # Write the model to a file
    saveRDS(model, file = here("output/models/model_num.rds"))
  } else {
      # Read the model from a file
      model <- readRDS(file = here("output/models/model_num.rds"))
  } 
# 
```

```{r, posteriors}
#| label: posteriors
# Code to extract posteriors from the model and get predicted values
source(here("R", "func.R"))
#
## Extract posteriors
posteriors <- as_draws_df(model)
# 
## Get predictions for every test and treatment based on the posteriors of the model. We used the function org_post (see func.R) to get the predictions.
#
# Latency
post_lat <- org_post("lat")
# Choice
post_choice <- org_post("choice")
prob_choice <- exp(post_choice)/(1 + exp(post_choice))
# Estimated interest for the higher amount of food
post_int <- org_post("int")
#
```

Our results showed an effect of sex and age on Latency (mean estimated effect of sex = `r {format_dec(mean(posteriors$b_loglatency_sexm), 2)}`, 95% CI = [`r {format_dec(quantile(posteriors$b_loglatency_sexm, 0.025), 2)}`, `r {format_dec(quantile(posteriors$b_loglatency_sexm, 0.975), 2)}`]; mean estimated effect of age = `r {format_dec(mean(posteriors$b_loglatency_age),2)}`, 95% CI = [`r {format_dec(quantile(posteriors$b_loglatency_age, 0.025), 2)}`, `r {format_dec(quantile(posteriors$b_loglatency_age, 0.975),2)}`]; see Table S1 in Supplementary Material), where males and older individials made, overall, faster decisions. However, we did not see such effects on Choice or Interest (see Table S1 in Supplementary Material). Nevertheless, when we analyse the effect of treatment on performance, for every variable recorded, we control for sex by averaging the predicted values for males and females, and we control for age by including the centered age in the model. These results are summarized in @fig-results and Table 1.  

```{r, fig-results}
#| label: fig-results
#| fig.cap: "Mean estimates of loglatency (Latency), the probability of choosing first the larger number of crickets (Choice), and the mean estimated interest for the larger number of crickets (Interest) per each of the treatments for each of the numerical tests performed. The x-axis represents the estimate, and in the y-axis are the density of the estimates. The different colours indicate the different treatments. Points and bars represent the mean and standard deviation of the mean of the estimates, respectively. Vertical dashed lines in Choice and Interest graphs indicate p = 0.5 and int = 0, respectively."
#
source(here("R", "func.R"))
#
#### A) Organise the df used for both parts of the figure for each variable
#
# First the df for violin plots for each variable using df_violin_plot function from func.r
df_viol_lat <- df_violin_plot("lat")
df_viol_choice <- df_violin_plot("choice")
df_viol_int <- df_violin_plot("int")
#
# Second the df for the points and bars plot for each variable using df_bars_plot function from func.r
df_bars_lat <- df_bars_plot("lat")
df_bars_choice <- df_bars_plot("choice")
df_bars_int <- df_bars_plot("int")
#
#### B) Make the plots for each variable using plotting function from func.r
#
fig_lat <- plotting("lat")
fig_choice <- plotting("choice")
fig_int <- plotting("int")
#
#### C) Combine the plots and make final figure
fig_results <- plot_grid(fig_lat, fig_choice, fig_int, ncol = 1)
ggsave("./output/figures/fig_results.png", plot=fig_results, width = 25, height = 25, units = "cm", dpi = 600)
knitr::include_graphics("./output/figures/fig_results.png")
```

Temperature, CORT, or their interaction contrasts did not yield any significant result in any of the numerical tests (Table 1) and we did not observe any clear pattern indicating relevant effects of early environment on any of the tests (@fig-results). Except for Hot-CORT lizards in 1 VS 3 tests or Cold-Control lizards in 2 VS 4 tests, the predicted probability of choosing the greater number of crickets first was not different from 0.5 (@fig-results; but also see Table S2 in Supplementary Material). Similarly, the predicted interest for the larger number of crickets was not different from 0 in any of the tests (@fig-results; but also see Table S2 in Supplementary Material).  

_Table 1. Effects of temperature, CORT, and their interaction on latency, choice, and interest shown for the higher amount of food in each of the numerical discrimination tests. The table shows the comparissons for each predictor (Temperature = [meanHot - meanCold]; Hormone = [meanControl - meanCORT]; Interaction = [(meanHot-Control - meanHot-CORT) - (meanCold-Control - meanCold-CORT)]) and the p~mcmcm~ value of the comparisons. In bold, the effects where p~mcmc~ < 0.05._
```{r, tbl-data}
#| label: tbl-data
#| tbl-cap: "Effects of temperature, CORT, and their interaction on latency, choice, and interest shown for the higher amount of food in each of the numerical discrimination tests. The table shows the comparissons for each predictor (Temperature = [meanHot - meanCold]; Hormone = [meanControl - meanCORT]; Interaction = [(meanHot-Control - meanHot-CORT) - (meanCold-Control - meanCold-CORT)]) and the p~mcmcm~ value of the comparisons. In bold, the effects where p~mcmc~ < 0.05."
source(here("R", "func.R"))
#
# Making the df for each variable
#
## Initialize df_org as a list to store data frames for each variable
df_org <- list()
## Define variables and tests
variable <- c("Latency", "Choice", "Interest")
test <- c("1VS4", "1VS3", "2VS4", "2VS3", "3VS4")
## Loop over each variable
for(a in variable){
  # Select the original df to use depending on the variable
  if(a == "Latency"){
    post <- post_lat
  } else if(a == "Choice"){
    post <- prob_choice
  } else if(a == "Interest"){
    post <- post_int
  }
  df_tables <- data.frame()
  for(b in test){
    # Modify the df to get the values per each test
    post_mod <- post %>%
      dplyr::select(dplyr::matches(b))
    # Extract the required columns
    Cold_CORT <- post_mod[[paste0("X", b, "_Cold_CORT")]]
    Cold_Control <- post_mod[[paste0("X", b, "_Cold_Control")]]
    Hot_CORT <- post_mod[[paste0("X", b, "_Hot_CORT")]]
    Hot_Control <- post_mod[[paste0("X", b, "_Hot_Control")]]
    # Calculate effects and pmcmc values
    effect_temp <- format_dec(mean(c(Hot_CORT, Hot_Control)) - mean(c(Cold_CORT, Cold_Control)), 1)
    effect_hormone <- format_dec(mean(c(Hot_Control, Cold_Control)) - mean(c(Hot_CORT, Cold_CORT)), 1)
    interaction <- format_dec((mean(Hot_Control) - mean(Cold_Control)) - (mean(Hot_CORT) - mean(Cold_CORT)), 1)
    #
    pmcmc_temp <- format_p(pmcmc(c(Hot_CORT, Hot_Control) - c(Cold_CORT, Cold_Control)), 2)
    pmcmc_hormone <- format_p(pmcmc(c(Hot_Control, Cold_Control) - c(Hot_CORT, Cold_CORT)), 2)
    pmcmc_interaction <- format_p(pmcmc((Hot_Control - Cold_Control) - (Hot_CORT - Cold_CORT)), 2)
    # Define labels and values
    effects_predictors_names <- c("Temperature", 
                          "Hormone", 
                          "Interaction")
    values_predictors <- c(effect_temp, effect_hormone, interaction)
    values_pmcmc <- c(pmcmc_temp, pmcmc_hormone, pmcmc_interaction)
    # Create a temporary data frame for this loop iteration
    temporal_df <- data.frame(Predictor = effects_predictors_names,
                        Effect = values_predictors,
                        pmcmc = values_pmcmc,
                        Test = b,
                        stringsAsFactors = FALSE)
    # Merge the temporary data frame to the main df_tables
    df_tables <- rbind(df_tables, temporal_df)
  }
  df_tables$Variable <- a
  df_org[[a]] <- df_tables
}
# Combine all data frames in df_org into one data frame
table_df <- do.call(rbind, df_org)
# Convert the combined list into a data frame and modify for the table
table_df <- as.data.frame(table_df, stringsAsFactors = FALSE) %>%
  mutate(results = trimws(paste0(Effect, " (p", pmcmc,")"))) %>%
  dplyr::select(Variable, Test, Predictor, results) %>%
  pivot_wider(names_from = Test, values_from = c(results), names_prefix = "")
#
#
# Making the table
#
## Table format
set_flextable_defaults(
 font.family = "Arial",
 font.size = 9)
# Create the table
real_table <- flextable(table_df) %>%
    align(align="center", part="all") %>% 
    add_header_row(values = c("", "Tests"), colwidths = c(2, 5)) %>%
    flextable::compose(i = c(2,3,5,6,8,9), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    hline(i = c(3,6), j = c(1:7), part = "body") %>% # To make some horizontal lines 
    set_table_properties(layout = "autofit", width = 1)
real_table
```



## Discussion
Our results indicate that lizards were not able to discriminate between different number of crickets in any of the tests, and that their performance did not vary across treatments. We did not see changes in Latency in any of the tests, and treatment did not affect lizards' time to make a decision either. Furthermore, in most of the cases, the estimated probability of choosing the option with more crickets first did not differ from random (0.5), with significant differences emerging only in two tests for two of the four treatments; yet no clear pattern was observed. Similar findings were obtained on the interest for the larger number of food items, that did not differ from zero in any of the tests or groups. These results imply that _L. guichenoti_ did not use numerical or other potential quantitative cues we were not controlling for to make foraging decisions.  

In out experiment, we employed a spontaneous choice test to investigate _L. guichenoti_'s numerical abilities. This test is considered a reliable method to assess numeosity in animals, as it allows for the observation of natural behaviour and the acquirement of ecological issues related to numerousness and quantity discrimination (**REFs**). However, one of the main caveats of this approach is that motivation plays a key-role in animals' performance (**Agrillo and Bisazza, 2014**). Here, we discarded the trials where the lizards did not interact with any of the options, so the results observed are based exclusively in those where the lizards made a choice, and, as such, we do not consider motivation to be a factor affecting our results. Spontaneous choice tests are also based on the assumption that animals should select the most appropriate quantity, which may not be necessarily the largest one (**Agrillo and Bisazza, 2014**). Although the Optimal Foraging Theory predicts animals to prefer larger amounts of food, this may not hold true if increased handling costs are involved (**REFs**). Nonetheless, in that scenario, we would still expect animals to exhibit a preference, even if for the smaller amount of food, or to observe some influence of age on their choice or interest, as older animals are typically larger and may be more adept at handling a greater number of prey. Finally, spontaneous choice tests are constraint by the researchers' ability to control for other quantitative cues that may correlate with numerosity (**Agrillo and Bisazza, 2014; Uller et al. 2003; Krusche et al. 2010; Abramson et al. 2011; Garland et al. 2012; Vonk and Beran 2012; Gómez-Laplaza and Gerlai 2013; Mehlis et al. 2015**). Although we controlled for some quantitative information by rotating crickets in the option with less items to increase total area, we can not rule out the possibility that lizards could be using other quantitative cues. If lizards were using other cues exclusively for making their decision, we would still expect to see some type of discrimination between choices unless the cues were conflicting [**Cooper et al_Journal of Herpetology**]. Indeed, it could be that _L. guichenoti_ uses different quantitative cues at the same time in their foraging decisions, and, when conflicted, the preference towards one or the other varies between individuals, which may produce the same results we observed here. Alternatively, it could be that _L. guichenoti_ does not use numerical cues in their foraging decisions, and that they rely on other type of information to make their choices. Half of the studies showing numerosity in reptiles employed trained quantity discrimination tasks [**Soldati et al. 2017; Lin et al. 2021, 2024; Miletto-Petrazzini et al. 2018; Tomonaga et al. 2023 Animal Cognition**]. In the remaining studies, the relevant stimuli involved either vegetables [**Gazzola et al. 2018**; @szabo_spontaneous_2021] or large quantities (e.g., 5 vs. 10)[@recio_prey_2021]. In contrast, _Podarcis siculus_ failed to discriminate between different numbers of _Musca domestica_ larvae in a spontaneous choice test, but they showed a clear preference towards bigger larvae in a similar task [**Miletto-Petrazzini et al. 2017**]; and they were able to learn to discriminate between small close numbers in a training procedure [**Miletto-Petrazzini et al. 2018**]. This suggest that numerosity may not be relevant in foraging contexts for reptiles that eat live prey. In this regard, numerical abilities may have evolved under different situations. [**EXAMPLE FISHES THAT NOT FORAGE BUT YES SOCIAL**]. Further studies should explore numerosity in _L. guichenoti_ with a different methodology and accross different contexts. **For instance: things about higher numbers (our paper), use different type of relevant stimuli (females, conspecifics? Carazo et al and other), use training procedures.**


    
- Treatment did not affect the discrimination capacity or the decision making
  - Other studies showing the effect of temperature on discrimination
  - Other studies about the effects of hormones on discrimination
For instance, mammals’ hippocampi contain more GCs receptors (GRs) than other regions of the brain (Siegel et al., 2006), which may be the main cause of overall impairments inspatial learning in rats but not in other cognitive domains (Haq et al., 2021).
  - Studies showing the effect of temperature and CORT on lizards' cognition
  - The 'two systems'
The second non-verbal system is thought to be an object tracking system (also known as ‘subitizing’) that yields relatively discrete representations. This system keeps track of a small number of items (originally set to 6 (REF. 32), but later restricted to 3 or 4 items) by assign-ing ‘markers’ (also known as ‘fingers’,‘pointers’,‘symbols’, 'tokens’ or ‘files’) to individual elements (**Nieder, 2005 Nature Reviews**)
Researchers have suggested that numerousness can be processed by two types of systems: one system for small sets (≤ 4) that works by tracking and encoding objects as individual entities; and an analogous system that operates with large numerosities by estimation processes (for a review see Cantlon et al. 2009; Hyde 2011). **Are they encoded in different regions? Brin-nuclei-dependent effects of CORT and temp** 

- Conclusions
Our results indicate that _L. guichenoti_ does not use numerical to make foraging decisions. This outcome, however, does not imply lack of numerical abilities, since other types of experimental approaches can yield different results. We also observed that lizards' performance was not different between treatments, which suggests that the early environment did not affect their numerical abilities. However, other tests and paradigmas should be used to test this further since both CORT and temperature can have different effects on different brain nuclei. 

## References
<div id="refs"></div>

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

# Suplementary Material

#### Model results

_Table S1.- Summary of the model fitted_

```{r, summary_org}
#| label: summary_org
#
## Get the summary of the posteriors to get the estimates of each parameter of the model
sum <- summary(posteriors)
## Extract the values of the summary
sum_2 <- as.data.frame(sum) %>%
  dplyr::select(-mad) %>%
  filter(!str_detect(variable, "^r_"))
sum_df <- sum_2 %>%
  mutate(across(where(is.numeric), ~ sprintf(paste0("%.", 2, "f"), .)))  
```


For loglatency
```{r, tbl-summary_lat}
#| label: tbl-summary_lat
#| tbl-cap: "Summary of the model fitted for the latency variable."
#
source(here("R", "func.R"))
## Get df only for latency
df_sum_lat <- sum_table_org(sum_df, "lat")
## Make table
table_sum_lat <- flextable(df_sum_lat)
table_sum_lat
```


For choice
```{r, tbl-summary_choice}
#| label: tbl-summary_choice
#| tbl-cap: "Summary of the model fitted for the choice variable."
#
source(here("R", "func.R"))
## Get df only for choice
df_sum_choice <- sum_table_org(sum_df, "choice")
## Make table
table_sum_choice <- flextable(df_sum_choice)
table_sum_choice
```


For compared interest
```{r, tbl-summary_int}
#| label: tbl-summary_int
#| tbl-cap: "Summary of the model fitted for the interest variable."
#
source(here("R", "func.R"))
## Get df only for interest
df_sum_int <- sum_table_org(sum_df, "int")
## Make table
table_sum_int <- flextable(df_sum_int)
table_sum_int
```


Other effects
```{r, tbl-summary_other}
#| label: tbl-summary_other
#| tbl-cap: "Summary of the model fitted for other effects."
#
source(here("R", "func.R"))
## Get df only for interest
df_sum_other <- sum_df %>%
  filter(!str_detect(variable, "^b_"))
## Make table
table_sum_other <- flextable(df_sum_other)
table_sum_other
```


```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Treatments effects

_Table S2.- Estimated mean probability of choosing first the higher amount (Choice) and the mean interest for the higher amount of food (Interest) per treatment group for each of the numerical tests performed. p indicates the p~mcmcm~ value (p) of testing the hypothesis Choice ≠ 0.5, and Interest ≠ 0, which would indicate a preference towards one of choices (> towards higher amounts, < towards lower amounts) of the comparissons. In bold, the groups where p~mcmcm~ < 0.05_
```{r, tbl-disc}
#| label: tbl-disc
#| tbl-cap: "Estimated probability of choosing first the higher amount (Choice) and the interest for the higher amount of food (Interest) per treatment group for each os the tests performed. p indicates the p~mcmcm~ value of testing the hypothesis Choice ≠ 0.5, and Interest ≠ 0, which would indicate a preference towards one of choices (> towards higher amounts, < towards lower amounts) of the comparissons."
#
source(here("R", "func.R"))
#
# Making the df for each variable
#
## Initialize df_org as a list to store data frames for each variable
disc_list <- list()
## Define variables and tests
variable <- c("Choice", "Interest")
test <- c("1VS4", "1VS3", "2VS4", "2VS3", "3VS4")
## Loop over each variable
for(c in variable){
  # Select the original df to use depending on the variable
  if(c == "Choice"){
    post <- prob_choice
    val <- 0.5
  } else if(c == "Interest"){
    post <- post_int
    val <- 0
  }
  df_disc <- data.frame()
  for(d in test){
    # Modify the df to get the values per each test
    post_mod <- post %>%
      dplyr::select(dplyr::matches(d))
    # Extract the required columns
    Cold_CORT <- post_mod[[paste0("X", d, "_Cold_CORT")]]
    Cold_Control <- post_mod[[paste0("X", d, "_Cold_Control")]]
    Hot_CORT <- post_mod[[paste0("X", d, "_Hot_CORT")]]
    Hot_Control <- post_mod[[paste0("X", d, "_Hot_Control")]]
    # Calculate means and pmcmc values
    Cold_CORT_mean <- format_dec(mean(Cold_CORT), 2)
    Cold_Control_mean <- format_dec(mean(Cold_Control), 2)
    Hot_CORT_mean <- format_dec(mean(Hot_CORT), 2)
    Hot_Control_mean <- format_dec(mean(Hot_Control), 2)
    #
    pmcmc_Cold_CORT <- format_p(pmcmc(Cold_CORT, null = val), 2)
    pmcmc_Cold_Control <- format_p(pmcmc(Cold_Control, null = val), 2)
    pmcmc_Hot_CORT <- format_p(pmcmc(Hot_CORT, null = val), 2)
    pmcmc_Hot_Control <- format_p(pmcmc(Hot_Control, null = val), 2)
    # Define labels and values
    treatment_names <- c("Cold-CORT", "Cold-Control", "Hot-CORT", "Hot-Control")
    values_means <- c(Cold_CORT_mean, Cold_Control_mean, Hot_CORT_mean, Hot_Control_mean)
    values_pmcmc <- c(pmcmc_Cold_CORT, pmcmc_Cold_Control, pmcmc_Hot_CORT, pmcmc_Hot_Control)
    # Create a temporary data frame for this loop iteration
    temporal_df <- data.frame(Treatment = treatment_names,
                        Effect = values_means,
                        pmcmc = values_pmcmc,
                        Test = d,
                        stringsAsFactors = FALSE)
    # Merge the temporary data frame to the main df_tables
    df_disc <- rbind(df_disc, temporal_df)
  }
  df_disc$Variable <- c
  disc_list[[c]] <- df_disc
}
# Combine all data frames in df_org into one data frame
disc_df <- do.call(rbind, disc_list)
# Convert the combined list into a data frame and modify for the table
disc_df_final <- as.data.frame(disc_df, stringsAsFactors = FALSE) %>%
  mutate(pmcmc = gsub("^= ", "", pmcmc)) %>%
  pivot_wider(names_from = Variable, values_from = c(Effect, pmcmc), names_prefix = "") %>%
  dplyr::select(Test, Treatment, 
                Effect_Choice, pmcmc_Choice,
                Effect_Interest, pmcmc_Interest)
#
#
# Making the table
#
## Table format
set_flextable_defaults(
 font.family = "Arial",
 fint.size = 10)
# Create the table
disc_table <- flextable(disc_df_final) %>%
    set_table_properties(width = 1) %>%
    align(align="center", part="all") %>% 
    # Bold the cell containing "< 0.05" in the `pmcmc_Choice` column and the next cell
    bold(i = which(disc_df_final$pmcmc_Choice == "< 0.05"), j = "pmcmc_Choice", part = "body") %>%
    bold(i = which(disc_df_final$pmcmc_Choice == "< 0.05"), j = "Effect_Choice", part = "body") %>%
    bold(i = which(disc_df_final$pmcmc_Choice == "< 0.05"), j = "Treatment", part = "body") %>%
    # Bold the cell containing "< 0.05" in the `pmcmc_Interest` column and the next cell
    bold(i = which(disc_df_final$pmcmc_Interest == "< 0.05"), j = "pmcmc_Interest", part = "body") %>%
    bold(i = which(disc_df_final$pmcmc_Interest == "< 0.05"), j = "Effect_Interest", part = "body") %>%
    bold(i = which(disc_df_final$pmcmc_Interest == "< 0.05"), j = "Treatment", part = "body") %>%
    flextable::compose(i = c(2:4,6:8,10:12,14:16,18:20), j = 1, value = as_paragraph(""), part = "body") %>% # To remove some of the values in the first column
    flextable::compose(i = 1, j = c(3,5), value = as_paragraph("Est. mean"), part = "head") %>% 
    flextable::compose(i = 1, j = c(4,6), value = as_paragraph("p"), part = "head") %>% 
    hline(i = c(4,8,12,16), j = c(1:6), part = "body") %>% # To make some horizontal lines
    vline(i = c(1:20), j = 4, part = "body") %>% # To make some vertical lines
    vline(i = 1, j = 4, part = "head") 
disc_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Testing potential side biases

_Table S3.- Number of individuals per treatment that chose the right (R) or left (L) side in each of the numerical tests. p-value indicates the result of the binomial test comparing the number of choices between sides. In bold, the groups where p-value < 0.05_
```{r, tbl-sides}
#| label: tbl-sides
#| tbl-cap: "Number of individuals per treatment that chose the right (R) or left (L) side in each of the numerical tests. p-value indicates the result of the binomial test comparing the number of choices between sides."
source(here("R", "func.R"))
#
# 1) MAKING THE DF FOR THE TABLE
data_sides <- data_num %>%
  group_by(trt, test_type) %>% # Group by treatment and test
  summarise(
    right_choices = sum(side_choice == "Right", na.rm = TRUE),
    left_choices = sum(side_choice == "Left", na.rm = TRUE),
  ) %>% # Count the number of correct choices
  rowwise() %>%  # Ensure that mutate works row by row
  mutate(
    total_choices = right_choices + left_choices,  # Calculate total choices
    p_value = format_dec(binom.test(right_choices, total_choices)$p.value, 2)  # Perform binom test
  ) %>% # Test for differences between sides
  ungroup() %>%  # Remove rowwise grouping
  mutate(choices_Right_Left_p = paste0("R = ", right_choices, " | L = ", left_choices, " , p = ", p_value), # Create a column with the choices
        trt = recode(trt, 
                 "B_23" = "CORT-Cold (n = 20)", 
                 "A_23" = "Control-Cold (n = 20)", 
                 "B_28" = "CORT-Hot (n = 20)", 
                 "A_28" = "Control-Hot (n = 20)")) %>% # To order the treatments
  dplyr::select(trt, test_type, choices_Right_Left_p) %>% # Remove unused columns
  pivot_wider(names_from = test_type, values_from = c(choices_Right_Left_p)) %>% # To split between tests
data.frame()
#
# 2) MAKING THE TABLE
#
# Split the table_data df by task
sides_table <- flextable(data_sides) %>%
  compose(j = 1, value = as_paragraph(""), part = "header") %>%
  compose(j = 2, value = as_paragraph("1 VS 4"), part = "header") %>%
  compose(j = 3, value = as_paragraph("1 VS 3"), part = "header") %>%
  compose(j = 4, value = as_paragraph("2 VS 4"), part = "header") %>%
  compose(j = 5, value = as_paragraph("2 VS 3"), part = "header") %>%
  compose(j = 6, value = as_paragraph("3 VS 4"), part = "header") %>%
  set_table_properties( width = 0.9, layout = "autofit") %>%
  align(align = "center", part = "all")
sides_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Prey orientation test
Because we were concerned that the orientation of the crickets could affect the lizards' choice, we performed one simple choice test to investigate this. We used the same platform and Petri dish as in the numerical discrimination task, but we placed one cricket on each side of the platform, one oriented vertically in respect to the shelter position (see @fig-Methods B) and the other one horizontal to the shelter. We perform a unique trial randomising the position of the orientation of the cricket. We recorded the amount of individuals that chose the cricket oriented vertically and horizontally. Results are shown in the table below.

_Table S4. Number of individuals per treatment that chose the cricket oriente horizontally (Horizontal) or vertically (Vertical) in our control tests. p-value indicates the result of the binomial test comparing the number of choices between both choices._
```{r, tbl-orientation}
#| label: tbl-orientation
#| tbl-cap: "Number of individuals per treatment that chose the cricket oriente horizontally (Horizontal) or vertically (Vertical) in our control tests. p-value indicates the result of the binomial test comparing the number of choices between both choices."
source(here("R", "func.R"))
#
# 1) MAKING THE DF FOR THE TABLE
data_or_res <- data_orient %>%
  mutate(choice_or = ifelse(choice_horizontal == 0, "Vertical", "Horizontal")) %>%
  dplyr::select(trt, choice_horizontal, choice_or) %>%
  group_by(trt) %>% # Group by treatment and test
  summarize(
    Horizontal_Count = sum(choice_or == "Horizontal"),
    Vertical_Count = sum(choice_or == "Vertical")
  ) %>% # Count the number of horizontal and vertical choices
  rowwise() %>%  # Ensure that mutate works row by row
  mutate(
    total_choices = Horizontal_Count + Vertical_Count,  # Calculate total choices
    p_value = format_dec(binom.test(Horizontal_Count, total_choices)$p.value, 3)  # Perform binom test
  ) %>% # Test for differences between sides
  ungroup() %>%  # Remove rowwise grouping
  mutate(trt = recode(trt, 
            "B_23" = "CORT-Cold (n = 20)", 
            "A_23" = "Control-Cold (n = 20)", 
            "B_28" = "CORT-Hot (n = 20)", 
            "A_28" = "Control-Hot (n = 20)")) %>% # To order the treatments
  dplyr::select(trt, Horizontal_Count, Vertical_Count, p_value) %>% # Remove unused columns
data.frame()
#
# 2) MAKING THE TABLE
#
# Split the table_data df by task
orient_table <- flextable(data_or_res) %>%
  compose(j = 1, value = as_paragraph(""), part = "header") %>%
  compose(j = 2, value = as_paragraph("Horizontal"), part = "header") %>%
  compose(j = 3, value = as_paragraph("Vertical"), part = "header") %>%
  compose(j = 4, value = as_paragraph("p-value"), part = "header") %>%
  set_table_properties( width = 0.9, layout = "autofit") %>%
  align(align = "center", part = "all")
orient_table
```

```{r, results='asis', echo=FALSE}
cat("\\newpage")
```

#### Checking the models plots  
```{r, checking_model, out.width="70%", fig.align="center"}
# Chunk for plotting the model
## Initial plot
plot(model)
#
## pp_checks
pp_check(model, resp = "loglatency")
pp_check(model, resp = "choice")
pp_check(model, resp = "comparedinterest")
```
